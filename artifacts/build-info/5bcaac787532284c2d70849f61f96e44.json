{
	"id": "5bcaac787532284c2d70849f61f96e44",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"FeeSplitter.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport {Ownable2Step} from \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\";\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol\";\r\n\r\ncontract FeeSplitter is Ownable2Step, ReentrancyGuard {\r\n\r\n    using SafeERC20 for IERC20;\r\n\r\n    /**\r\n     * @custom:section                           ** ERRORS **\r\n     */\r\n    error CantSetAddressZero();\r\n    error ZeroProfitDivider();\r\n\r\n    /**\r\n     * @custom:section                           ** IMMUTABLES **\r\n     */\r\n    IERC20 private immutable _PTOKEN;\r\n\r\n    /**\r\n     * @custom:section                           ** PRIVATE VARIABLES **\r\n     */\r\n    address private BRIBES;\r\n    address private PANTHEON;\r\n    address private EQUALDAO;\r\n\r\n    uint256 private ProfitDivider;\r\n\r\n    /**\r\n     * @custom:section                           ** PUBLIC VARIABLES **\r\n     */\r\n    uint256 public totalBribes;\r\n\r\n    /**\r\n     * @custom:section                           ** EVENTS **\r\n     */\r\n    event FeeSent(\r\n        uint256 indexed time,\r\n        uint256 indexed AmountSentToPantheonAndEqualDao,\r\n        uint256 indexed AmountSentToBribing\r\n    );\r\n    event ProfitDividerUpdated(uint256 indexed ProfitDivider);\r\n    event PantheonAddressUpdated(address indexed PantheonAddress);\r\n    event EqualDaoAddressUpdated(address indexed EqualDaoAddress);\r\n    event BribingAddressUpdated(address indexed BribingAddress);\r\n\r\n\r\n    /**\r\n     * @custom:section                           ** CONSTRUCTOR **\r\n     */\r\n    constructor(address _pToken) {\r\n        _PTOKEN = IERC20(_pToken);\r\n    }\r\n\r\n    /**\r\n     * @custom:section                           ** EXTERNAL FUNCTIONS **\r\n     */\r\n\r\n    /**\r\n     * @notice this function splits the revenue generated by pTOKEN.sol into the Bribing Wallet and the Pantheon & =DAO wallets\r\n     */\r\n    function splitFees() external onlyOwner {\r\n        uint256 profit = (_PTOKEN.balanceOf(address(this)) * 100 ) / ProfitDivider;\r\n\r\n        SafeERC20.safeTransfer(_PTOKEN, EQUALDAO, profit / 2);\r\n        SafeERC20.safeTransfer(_PTOKEN, PANTHEON, profit / 2);\r\n\r\n        uint256 remaining = _PTOKEN.balanceOf(address(this));\r\n\r\n        SafeERC20.safeTransfer(_PTOKEN, BRIBES, remaining);\r\n        totalBribes += remaining;\r\n\r\n        emit FeeSent(block.timestamp, profit, remaining);\r\n    }\r\n\r\n    /**\r\n     * @notice this function lets the owner set the ProfitDivider variable that is used to calculate the amount sent to the Pantheon & =DAO wallets\r\n     */\r\n    function setProfitDivider(uint256 _value) external onlyOwner {\r\n        if(_value == 0) revert ZeroProfitDivider();  \r\n        ProfitDivider = _value;\r\n\r\n        emit ProfitDividerUpdated(_value);\r\n    }\r\n\r\n    /**\r\n     * @notice this function lets the owner set the Bribing Wallet\r\n     */\r\n    function setBribingWallet(address _address) external onlyOwner {\r\n        if(_address == address(0x0)) revert CantSetAddressZero();\r\n        BRIBES = (_address);\r\n\r\n        emit BribingAddressUpdated(_address);\r\n    }\r\n\r\n    /**\r\n     * @notice this function lets the owner set the Pantheon Wallet\r\n     */\r\n    function setPantheonWallet(address _address) external onlyOwner {\r\n        if(_address == address(0x0)) revert CantSetAddressZero();\r\n        PANTHEON = (_address);\r\n\r\n        emit PantheonAddressUpdated(_address);\r\n    }\r\n\r\n    /**\r\n     * @notice this function lets the owner set the =DAO Wallet\r\n     */\r\n    function setEqualDaoWallet(address _address) external onlyOwner {\r\n        if(_address == address(0x0)) revert CantSetAddressZero();\r\n        EQUALDAO = (_address);\r\n\r\n        emit EqualDaoAddressUpdated(_address);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\");\n        _transferOwnership(sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@v4.9.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@v4.9.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@v4.9.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 206,
								"contract": "@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a6eb113e6c51d8d97b1bcf90ba7a2aa9541aaa37f7911727579de7f9c01557164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a6eb113e6c51d8d97b1bcf90ba7a2aa9541aaa37f7911727579de7f9c01557164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH15 0xB113E6C51D8D97B1BCF90BA7A2AA95 COINBASE 0xAA LOG3 PUSH32 0x7911727579DE7F9C01557164736F6C6343000812003300000000000000000000 ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a6eb113e6c51d8d97b1bcf90ba7a2aa9541aaa37f7911727579de7f9c01557164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH15 0xB113E6C51D8D97B1BCF90BA7A2AA95 COINBASE 0xAA LOG3 PUSH32 0x7911727579DE7F9C01557164736F6C6343000812003300000000000000000000 ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a6eb113e6c51d8d97b1bcf90ba7a2aa9541aaa37f7911727579de7f9c01557164736f6c63430008120033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@v4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol",
								"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@v4.9.3/utils/Address.sol",
								"@openzeppelin/contracts@v4.9.3/utils/Context.sol",
								"FeeSplitter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1709829e129b6952d8fa3eb6645d4701a15bf43f20ca2758836b6733a7701f464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1709829e129b6952d8fa3eb6645d4701a15bf43f20ca2758836b6733a7701f464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH17 0x9829E129B6952D8FA3EB6645D4701A15BF NUMBER CALLCODE 0xC LOG2 PUSH22 0x8836B6733A7701F464736F6C63430008120033000000 ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1709829e129b6952d8fa3eb6645d4701a15bf43f20ca2758836b6733a7701f464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH17 0x9829E129B6952D8FA3EB6645D4701A15BF NUMBER CALLCODE 0xC LOG2 PUSH22 0x8836B6733A7701F464736F6C63430008120033000000 ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1709829e129b6952d8fa3eb6645d4701a15bf43f20ca2758836b6733a7701f464736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@v4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol",
								"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@v4.9.3/utils/Address.sol",
								"@openzeppelin/contracts@v4.9.3/utils/Context.sol",
								"FeeSplitter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@v4.9.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FeeSplitter.sol": {
				"FeeSplitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "CantSetAddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroProfitDivider",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "BribingAddress",
									"type": "address"
								}
							],
							"name": "BribingAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "EqualDaoAddress",
									"type": "address"
								}
							],
							"name": "EqualDaoAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "AmountSentToPantheonAndEqualDao",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "AmountSentToBribing",
									"type": "uint256"
								}
							],
							"name": "FeeSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "PantheonAddress",
									"type": "address"
								}
							],
							"name": "PantheonAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "ProfitDivider",
									"type": "uint256"
								}
							],
							"name": "ProfitDividerUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setBribingWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setEqualDaoWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setPantheonWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setProfitDivider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "splitFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBribes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"CantSetAddressZero()": [
								{
									"custom:section": "** ERRORS **"
								}
							]
						},
						"events": {
							"FeeSent(uint256,uint256,uint256)": {
								"custom:section": "** EVENTS **"
							}
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"constructor": {
								"custom:section": "** CONSTRUCTOR **"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"BRIBES": {
								"custom:section": "** PRIVATE VARIABLES **"
							},
							"_PTOKEN": {
								"custom:section": "** IMMUTABLES **"
							},
							"totalBribes": {
								"custom:section": "** PUBLIC VARIABLES **"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FeeSplitter.sol\":412:3862  contract FeeSplitter is Ownable2Step, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"FeeSplitter.sol\":1732:1805  constructor(address _pToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x02\n    /* \"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"FeeSplitter.sol\":1789:1796  _pToken */\n  dup1\n    /* \"FeeSplitter.sol\":1772:1797  _PTOKEN = IERC20(_pToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"FeeSplitter.sol\":1732:1805  constructor(address _pToken) {... */\n  pop\n    /* \"FeeSplitter.sol\":412:3862  contract FeeSplitter is Ownable2Step, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1501:1654  function _transferOwnership(address newOwner) internal virtual override {... */\ntag_11:\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1590:1603  _pendingOwner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1583:1603  delete _pendingOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1613:1647  super._transferOwnership(newOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1638:1646  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1613:1637  super._transferOwnership */\n  or(tag_0_49, shl(0x20, tag_18))\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1613:1647  super._transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1501:1654  function _transferOwnership(address newOwner) internal virtual override {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_35\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_36:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_38\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_41\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":932:1051   */\ntag_40:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_42\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"FeeSplitter.sol\":412:3862  contract FeeSplitter is Ownable2Step, ReentrancyGuard {... */\ntag_14:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7173bb0c0c341c627c9734f9095ef27b00afaca222d0fccf9d280fbad8b7c078\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"FeeSplitter.sol\":412:3862  contract FeeSplitter is Ownable2Step, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9752b3b2\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x9752b3b2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x979e9056\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe7fcd45d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf6151089\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1f068108\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8f88f261\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"FeeSplitter.sol\":3326:3547  function setPantheonWallet(address _address) external onlyOwner {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1734:1946  function acceptOwnership() public virtual {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeSplitter.sol\":3638:3859  function setEqualDaoWallet(address _address) external onlyOwner {... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"FeeSplitter.sol\":3014:3231  function setBribingWallet(address _address) external onlyOwner {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      stop\n        /* \"FeeSplitter.sol\":1098:1124  uint256 public totalBribes */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":847:946  function pendingOwner() public view virtual returns (address) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FeeSplitter.sol\":2717:2920  function setProfitDivider(uint256 _value) external onlyOwner {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1139:1317  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"FeeSplitter.sol\":2055:2542  function splitFees() external onlyOwner {... */\n    tag_13:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"FeeSplitter.sol\":3326:3547  function setPantheonWallet(address _address) external onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"FeeSplitter.sol\":3424:3427  0x0 */\n      0x00\n        /* \"FeeSplitter.sol\":3404:3428  _address == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeSplitter.sol\":3404:3412  _address */\n      dup2\n        /* \"FeeSplitter.sol\":3404:3428  _address == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"FeeSplitter.sol\":3401:3457  if(_address == address(0x0)) revert CantSetAddressZero() */\n      tag_54\n      jumpi\n        /* \"FeeSplitter.sol\":3437:3457  CantSetAddressZero() */\n      mload(0x40)\n      0x842090f100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"FeeSplitter.sol\":3401:3457  if(_address == address(0x0)) revert CantSetAddressZero() */\n    tag_54:\n        /* \"FeeSplitter.sol\":3480:3488  _address */\n      dup1\n        /* \"FeeSplitter.sol\":3468:3476  PANTHEON */\n      0x04\n      0x00\n        /* \"FeeSplitter.sol\":3468:3489  PANTHEON = (_address) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FeeSplitter.sol\":3530:3538  _address */\n      dup1\n        /* \"FeeSplitter.sol\":3507:3539  PantheonAddressUpdated(_address) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0cd19529020fd81d84beeae5290e80cef2820b494e9aedf821b3c45b8110d7df\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FeeSplitter.sol\":3326:3547  function setPantheonWallet(address _address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_58\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_59\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1734:1946  function acceptOwnership() public virtual {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1786:1800  address sender */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1803:1815  _msgSender() */\n      tag_61\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1803:1813  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1803:1815  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1786:1815  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1851:1857  sender */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1833:1857  pendingOwner() == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1833:1847  pendingOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1833:1845  pendingOwner */\n      tag_38\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1833:1847  pendingOwner() */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1833:1857  pendingOwner() == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1825:1903  require(pendingOwner() == sender, \"Ownable2Step: caller is not the new owner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1913:1939  _transferOwnership(sender) */\n      tag_67\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1932:1938  sender */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1913:1931  _transferOwnership */\n      tag_59\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1913:1939  _transferOwnership(sender) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1776:1946  {... */\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1734:1946  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"FeeSplitter.sol\":3638:3859  function setEqualDaoWallet(address _address) external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_70:\n        /* \"FeeSplitter.sol\":3736:3739  0x0 */\n      0x00\n        /* \"FeeSplitter.sol\":3716:3740  _address == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeSplitter.sol\":3716:3724  _address */\n      dup2\n        /* \"FeeSplitter.sol\":3716:3740  _address == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"FeeSplitter.sol\":3713:3769  if(_address == address(0x0)) revert CantSetAddressZero() */\n      tag_72\n      jumpi\n        /* \"FeeSplitter.sol\":3749:3769  CantSetAddressZero() */\n      mload(0x40)\n      0x842090f100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"FeeSplitter.sol\":3713:3769  if(_address == address(0x0)) revert CantSetAddressZero() */\n    tag_72:\n        /* \"FeeSplitter.sol\":3792:3800  _address */\n      dup1\n        /* \"FeeSplitter.sol\":3780:3788  EQUALDAO */\n      0x05\n      0x00\n        /* \"FeeSplitter.sol\":3780:3801  EQUALDAO = (_address) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FeeSplitter.sol\":3842:3850  _address */\n      dup1\n        /* \"FeeSplitter.sol\":3819:3851  EqualDaoAddressUpdated(_address) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x203661c8635f7afb5f15d76e6b159110290d075ad62b4ee9ff9a7ab94187d4bd\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FeeSplitter.sol\":3638:3859  function setEqualDaoWallet(address _address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FeeSplitter.sol\":3014:3231  function setBribingWallet(address _address) external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"FeeSplitter.sol\":3111:3114  0x0 */\n      0x00\n        /* \"FeeSplitter.sol\":3091:3115  _address == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeSplitter.sol\":3091:3099  _address */\n      dup2\n        /* \"FeeSplitter.sol\":3091:3115  _address == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"FeeSplitter.sol\":3088:3144  if(_address == address(0x0)) revert CantSetAddressZero() */\n      tag_76\n      jumpi\n        /* \"FeeSplitter.sol\":3124:3144  CantSetAddressZero() */\n      mload(0x40)\n      0x842090f100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"FeeSplitter.sol\":3088:3144  if(_address == address(0x0)) revert CantSetAddressZero() */\n    tag_76:\n        /* \"FeeSplitter.sol\":3165:3173  _address */\n      dup1\n        /* \"FeeSplitter.sol\":3155:3161  BRIBES */\n      0x03\n      0x00\n        /* \"FeeSplitter.sol\":3155:3174  BRIBES = (_address) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"FeeSplitter.sol\":3214:3222  _address */\n      dup1\n        /* \"FeeSplitter.sol\":3192:3223  BribingAddressUpdated(_address) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x170b0500ccf8a13146ecd9838c59849129b54beda77dadbe500b8817cdc8d368\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FeeSplitter.sol\":3014:3231  function setBribingWallet(address _address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FeeSplitter.sol\":1098:1124  uint256 public totalBribes */\n    tag_34:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":847:946  function pendingOwner() public view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":900:907  address */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":926:939  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":919:939  return _pendingOwner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":847:946  function pendingOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"FeeSplitter.sol\":2717:2920  function setProfitDivider(uint256 _value) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_79\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"FeeSplitter.sol\":2802:2803  0 */\n      0x00\n        /* \"FeeSplitter.sol\":2792:2798  _value */\n      dup2\n        /* \"FeeSplitter.sol\":2792:2803  _value == 0 */\n      sub\n        /* \"FeeSplitter.sol\":2789:2831  if(_value == 0) revert ZeroProfitDivider() */\n      tag_81\n      jumpi\n        /* \"FeeSplitter.sol\":2812:2831  ZeroProfitDivider() */\n      mload(0x40)\n      0xc830261600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"FeeSplitter.sol\":2789:2831  if(_value == 0) revert ZeroProfitDivider() */\n    tag_81:\n        /* \"FeeSplitter.sol\":2860:2866  _value */\n      dup1\n        /* \"FeeSplitter.sol\":2844:2857  ProfitDivider */\n      0x06\n        /* \"FeeSplitter.sol\":2844:2866  ProfitDivider = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FeeSplitter.sol\":2905:2911  _value */\n      dup1\n        /* \"FeeSplitter.sol\":2884:2912  ProfitDividerUpdated(_value) */\n      0x3d5a337607048974766ec58e2109261b4871329988d9615e7051bae635c38a60\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"FeeSplitter.sol\":2717:2920  function setProfitDivider(uint256 _value) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1139:1317  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_83\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1244:1252  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1228:1241  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1228:1252  _pendingOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1301:1309  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1267:1310  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1292:1299  owner() */\n      tag_85\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1292:1297  owner */\n      tag_24\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1292:1299  owner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1267:1310  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1139:1317  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FeeSplitter.sol\":2055:2542  function splitFees() external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"FeeSplitter.sol\":2106:2120  uint256 profit */\n      0x00\n        /* \"FeeSplitter.sol\":2167:2180  ProfitDivider */\n      sload(0x06)\n        /* \"FeeSplitter.sol\":2159:2162  100 */\n      0x64\n        /* \"FeeSplitter.sol\":2124:2131  _PTOKEN */\n      immutable(\"0x7173bb0c0c341c627c9734f9095ef27b00afaca222d0fccf9d280fbad8b7c078\")\n        /* \"FeeSplitter.sol\":2124:2141  _PTOKEN.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"FeeSplitter.sol\":2150:2154  this */\n      address\n        /* \"FeeSplitter.sol\":2124:2156  _PTOKEN.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"FeeSplitter.sol\":2124:2162  _PTOKEN.balanceOf(address(this)) * 100 */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"FeeSplitter.sol\":2123:2180  (_PTOKEN.balanceOf(address(this)) * 100 ) / ProfitDivider */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"FeeSplitter.sol\":2106:2180  uint256 profit = (_PTOKEN.balanceOf(address(this)) * 100 ) / ProfitDivider */\n      swap1\n      pop\n        /* \"FeeSplitter.sol\":2193:2246  SafeERC20.safeTransfer(_PTOKEN, EQUALDAO, profit / 2) */\n      tag_98\n        /* \"FeeSplitter.sol\":2216:2223  _PTOKEN */\n      immutable(\"0x7173bb0c0c341c627c9734f9095ef27b00afaca222d0fccf9d280fbad8b7c078\")\n        /* \"FeeSplitter.sol\":2225:2233  EQUALDAO */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeSplitter.sol\":2244:2245  2 */\n      0x02\n        /* \"FeeSplitter.sol\":2235:2241  profit */\n      dup5\n        /* \"FeeSplitter.sol\":2235:2245  profit / 2 */\n      tag_99\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_99:\n        /* \"FeeSplitter.sol\":2193:2215  SafeERC20.safeTransfer */\n      tag_100\n        /* \"FeeSplitter.sol\":2193:2246  SafeERC20.safeTransfer(_PTOKEN, EQUALDAO, profit / 2) */\n      jump\t// in\n    tag_98:\n        /* \"FeeSplitter.sol\":2257:2310  SafeERC20.safeTransfer(_PTOKEN, PANTHEON, profit / 2) */\n      tag_101\n        /* \"FeeSplitter.sol\":2280:2287  _PTOKEN */\n      immutable(\"0x7173bb0c0c341c627c9734f9095ef27b00afaca222d0fccf9d280fbad8b7c078\")\n        /* \"FeeSplitter.sol\":2289:2297  PANTHEON */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeSplitter.sol\":2308:2309  2 */\n      0x02\n        /* \"FeeSplitter.sol\":2299:2305  profit */\n      dup5\n        /* \"FeeSplitter.sol\":2299:2309  profit / 2 */\n      tag_102\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_102:\n        /* \"FeeSplitter.sol\":2257:2279  SafeERC20.safeTransfer */\n      tag_100\n        /* \"FeeSplitter.sol\":2257:2310  SafeERC20.safeTransfer(_PTOKEN, PANTHEON, profit / 2) */\n      jump\t// in\n    tag_101:\n        /* \"FeeSplitter.sol\":2323:2340  uint256 remaining */\n      0x00\n        /* \"FeeSplitter.sol\":2343:2350  _PTOKEN */\n      immutable(\"0x7173bb0c0c341c627c9734f9095ef27b00afaca222d0fccf9d280fbad8b7c078\")\n        /* \"FeeSplitter.sol\":2343:2360  _PTOKEN.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"FeeSplitter.sol\":2369:2373  this */\n      address\n        /* \"FeeSplitter.sol\":2343:2375  _PTOKEN.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_106:\n        /* \"FeeSplitter.sol\":2323:2375  uint256 remaining = _PTOKEN.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"FeeSplitter.sol\":2388:2438  SafeERC20.safeTransfer(_PTOKEN, BRIBES, remaining) */\n      tag_107\n        /* \"FeeSplitter.sol\":2411:2418  _PTOKEN */\n      immutable(\"0x7173bb0c0c341c627c9734f9095ef27b00afaca222d0fccf9d280fbad8b7c078\")\n        /* \"FeeSplitter.sol\":2420:2426  BRIBES */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FeeSplitter.sol\":2428:2437  remaining */\n      dup4\n        /* \"FeeSplitter.sol\":2388:2410  SafeERC20.safeTransfer */\n      tag_100\n        /* \"FeeSplitter.sol\":2388:2438  SafeERC20.safeTransfer(_PTOKEN, BRIBES, remaining) */\n      jump\t// in\n    tag_107:\n        /* \"FeeSplitter.sol\":2464:2473  remaining */\n      dup1\n        /* \"FeeSplitter.sol\":2449:2460  totalBribes */\n      0x07\n      0x00\n        /* \"FeeSplitter.sol\":2449:2473  totalBribes += remaining */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FeeSplitter.sol\":2524:2533  remaining */\n      dup1\n        /* \"FeeSplitter.sol\":2516:2522  profit */\n      dup3\n        /* \"FeeSplitter.sol\":2499:2514  block.timestamp */\n      timestamp\n        /* \"FeeSplitter.sol\":2491:2534  FeeSent(block.timestamp, profit, remaining) */\n      0x50efd2f2f250964da5961d710f9e330ea396faec8ef1e3dad48ff354a629d382\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"FeeSplitter.sol\":2095:2542  {... */\n      pop\n      pop\n        /* \"FeeSplitter.sol\":2055:2542  function splitFees() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1422:1429  owner() */\n      tag_113\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1422:1427  owner */\n      tag_24\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1501:1654  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1590:1603  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1583:1603  delete _pendingOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1613:1647  super._transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1638:1646  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1613:1637  super._transferOwnership */\n      tag_49\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1613:1647  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":1501:1654  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_121\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_124\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_124:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_126\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_128:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_127:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_135\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_136\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_136:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_145\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_144)\n    tag_145:\n      0x60\n      swap2\n      pop\n    tag_144:\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_146\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_147\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_147:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_151\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8121:8131  isContract */\n      tag_152\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_148)\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_157\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8249:8256  _revert */\n      tag_158\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_148:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_158:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_166:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_168:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_169:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_207\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_168\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_170:\n        /* \"#utility.yul\":641:665   */\n      tag_209\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_169\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_210:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_171:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_212\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_170\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_215\n      tag_166\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":917:1036   */\n    tag_214:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_216\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_171\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_172:\n        /* \"#utility.yul\":1263:1287   */\n      tag_218\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_169\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_26:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_220\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_172\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1605   */\n    tag_173:\n        /* \"#utility.yul\":1565:1572   */\n      0x00\n        /* \"#utility.yul\":1594:1599   */\n      dup2\n        /* \"#utility.yul\":1583:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_174:\n        /* \"#utility.yul\":1698:1722   */\n      tag_223\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_173\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_36:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_225\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_174\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_175:\n        /* \"#utility.yul\":2036:2060   */\n      tag_227\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_173\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_228:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_176:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_230\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_175\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_42:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_233\n      tag_166\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2312:2431   */\n    tag_232:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_234\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_176\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2740   */\n    tag_177:\n        /* \"#utility.yul\":2655:2666   */\n      0x00\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2684:2687   */\n      dup3\n        /* \"#utility.yul\":2677:2696   */\n      mstore\n        /* \"#utility.yul\":2729:2733   */\n      0x20\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2720:2734   */\n      add\n        /* \"#utility.yul\":2705:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2974   */\n    tag_178:\n        /* \"#utility.yul\":2886:2920   */\n      0x4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2874:2880   */\n      dup3\n        /* \"#utility.yul\":2870:2884   */\n      add\n        /* \"#utility.yul\":2863:2921   */\n      mstore\n        /* \"#utility.yul\":2955:2966   */\n      0x6e6577206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2950:2952   */\n      0x20\n        /* \"#utility.yul\":2942:2948   */\n      dup3\n        /* \"#utility.yul\":2938:2953   */\n      add\n        /* \"#utility.yul\":2931:2967   */\n      mstore\n        /* \"#utility.yul\":2746:2974   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2980:3346   */\n    tag_179:\n        /* \"#utility.yul\":3122:3125   */\n      0x00\n        /* \"#utility.yul\":3143:3210   */\n      tag_238\n        /* \"#utility.yul\":3207:3209   */\n      0x29\n        /* \"#utility.yul\":3202:3205   */\n      dup4\n        /* \"#utility.yul\":3143:3210   */\n      tag_177\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3136:3210   */\n      swap2\n      pop\n        /* \"#utility.yul\":3219:3312   */\n      tag_239\n        /* \"#utility.yul\":3308:3311   */\n      dup3\n        /* \"#utility.yul\":3219:3312   */\n      tag_178\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3337:3339   */\n      0x40\n        /* \"#utility.yul\":3332:3335   */\n      dup3\n        /* \"#utility.yul\":3328:3340   */\n      add\n        /* \"#utility.yul\":3321:3340   */\n      swap1\n      pop\n        /* \"#utility.yul\":2980:3346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3771   */\n    tag_66:\n        /* \"#utility.yul\":3518:3522   */\n      0x00\n        /* \"#utility.yul\":3556:3558   */\n      0x20\n        /* \"#utility.yul\":3545:3554   */\n      dup3\n        /* \"#utility.yul\":3541:3559   */\n      add\n        /* \"#utility.yul\":3533:3559   */\n      swap1\n      pop\n        /* \"#utility.yul\":3605:3614   */\n      dup2\n        /* \"#utility.yul\":3599:3603   */\n      dup2\n        /* \"#utility.yul\":3595:3615   */\n      sub\n        /* \"#utility.yul\":3591:3592   */\n      0x00\n        /* \"#utility.yul\":3580:3589   */\n      dup4\n        /* \"#utility.yul\":3576:3593   */\n      add\n        /* \"#utility.yul\":3569:3616   */\n      mstore\n        /* \"#utility.yul\":3633:3764   */\n      tag_241\n        /* \"#utility.yul\":3759:3763   */\n      dup2\n        /* \"#utility.yul\":3633:3764   */\n      tag_179\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3625:3764   */\n      swap1\n      pop\n        /* \"#utility.yul\":3352:3771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3777:3920   */\n    tag_180:\n        /* \"#utility.yul\":3834:3839   */\n      0x00\n        /* \"#utility.yul\":3865:3871   */\n      dup2\n        /* \"#utility.yul\":3859:3872   */\n      mload\n        /* \"#utility.yul\":3850:3872   */\n      swap1\n      pop\n        /* \"#utility.yul\":3881:3914   */\n      tag_243\n        /* \"#utility.yul\":3908:3913   */\n      dup2\n        /* \"#utility.yul\":3881:3914   */\n      tag_175\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3777:3920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3926:4277   */\n    tag_93:\n        /* \"#utility.yul\":3996:4002   */\n      0x00\n        /* \"#utility.yul\":4045:4047   */\n      0x20\n        /* \"#utility.yul\":4033:4042   */\n      dup3\n        /* \"#utility.yul\":4024:4031   */\n      dup5\n        /* \"#utility.yul\":4020:4043   */\n      sub\n        /* \"#utility.yul\":4016:4048   */\n      slt\n        /* \"#utility.yul\":4013:4132   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":4051:4130   */\n      tag_246\n      tag_166\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4013:4132   */\n    tag_245:\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4196:4260   */\n      tag_247\n        /* \"#utility.yul\":4252:4259   */\n      dup5\n        /* \"#utility.yul\":4243:4249   */\n      dup3\n        /* \"#utility.yul\":4232:4241   */\n      dup6\n        /* \"#utility.yul\":4228:4250   */\n      add\n        /* \"#utility.yul\":4196:4260   */\n      tag_180\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4186:4260   */\n      swap2\n      pop\n        /* \"#utility.yul\":4142:4270   */\n      pop\n        /* \"#utility.yul\":3926:4277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4283:4463   */\n    tag_181:\n        /* \"#utility.yul\":4331:4408   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4328:4329   */\n      0x00\n        /* \"#utility.yul\":4321:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4432   */\n      0x11\n        /* \"#utility.yul\":4425:4426   */\n      0x04\n        /* \"#utility.yul\":4418:4433   */\n      mstore\n        /* \"#utility.yul\":4452:4456   */\n      0x24\n        /* \"#utility.yul\":4449:4450   */\n      0x00\n        /* \"#utility.yul\":4442:4457   */\n      revert\n        /* \"#utility.yul\":4469:4879   */\n    tag_95:\n        /* \"#utility.yul\":4509:4516   */\n      0x00\n        /* \"#utility.yul\":4532:4552   */\n      tag_250\n        /* \"#utility.yul\":4550:4551   */\n      dup3\n        /* \"#utility.yul\":4532:4552   */\n      tag_173\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4527:4552   */\n      swap2\n      pop\n        /* \"#utility.yul\":4566:4586   */\n      tag_251\n        /* \"#utility.yul\":4584:4585   */\n      dup4\n        /* \"#utility.yul\":4566:4586   */\n      tag_173\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4561:4586   */\n      swap3\n      pop\n        /* \"#utility.yul\":4621:4622   */\n      dup3\n        /* \"#utility.yul\":4618:4619   */\n      dup3\n        /* \"#utility.yul\":4614:4623   */\n      mul\n        /* \"#utility.yul\":4643:4673   */\n      tag_252\n        /* \"#utility.yul\":4661:4672   */\n      dup2\n        /* \"#utility.yul\":4643:4673   */\n      tag_173\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4632:4673   */\n      swap2\n      pop\n        /* \"#utility.yul\":4822:4823   */\n      dup3\n        /* \"#utility.yul\":4813:4820   */\n      dup3\n        /* \"#utility.yul\":4809:4824   */\n      div\n        /* \"#utility.yul\":4806:4807   */\n      dup5\n        /* \"#utility.yul\":4803:4825   */\n      eq\n        /* \"#utility.yul\":4783:4784   */\n      dup4\n        /* \"#utility.yul\":4776:4785   */\n      iszero\n        /* \"#utility.yul\":4756:4839   */\n      or\n        /* \"#utility.yul\":4733:4872   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":4852:4870   */\n      tag_254\n      tag_181\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4733:4872   */\n    tag_253:\n        /* \"#utility.yul\":4517:4879   */\n      pop\n        /* \"#utility.yul\":4469:4879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4885:5065   */\n    tag_182:\n        /* \"#utility.yul\":4933:5010   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4930:4931   */\n      0x00\n        /* \"#utility.yul\":4923:5011   */\n      mstore\n        /* \"#utility.yul\":5030:5034   */\n      0x12\n        /* \"#utility.yul\":5027:5028   */\n      0x04\n        /* \"#utility.yul\":5020:5035   */\n      mstore\n        /* \"#utility.yul\":5054:5058   */\n      0x24\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5044:5059   */\n      revert\n        /* \"#utility.yul\":5071:5256   */\n    tag_97:\n        /* \"#utility.yul\":5111:5112   */\n      0x00\n        /* \"#utility.yul\":5128:5148   */\n      tag_257\n        /* \"#utility.yul\":5146:5147   */\n      dup3\n        /* \"#utility.yul\":5128:5148   */\n      tag_173\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5123:5148   */\n      swap2\n      pop\n        /* \"#utility.yul\":5162:5182   */\n      tag_258\n        /* \"#utility.yul\":5180:5181   */\n      dup4\n        /* \"#utility.yul\":5162:5182   */\n      tag_173\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5157:5182   */\n      swap3\n      pop\n        /* \"#utility.yul\":5201:5202   */\n      dup3\n        /* \"#utility.yul\":5191:5226   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":5206:5224   */\n      tag_260\n      tag_182\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5191:5226   */\n    tag_259:\n        /* \"#utility.yul\":5248:5249   */\n      dup3\n        /* \"#utility.yul\":5245:5246   */\n      dup3\n        /* \"#utility.yul\":5241:5250   */\n      div\n        /* \"#utility.yul\":5236:5250   */\n      swap1\n      pop\n        /* \"#utility.yul\":5071:5256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5262:5453   */\n    tag_109:\n        /* \"#utility.yul\":5302:5305   */\n      0x00\n        /* \"#utility.yul\":5321:5341   */\n      tag_262\n        /* \"#utility.yul\":5339:5340   */\n      dup3\n        /* \"#utility.yul\":5321:5341   */\n      tag_173\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5316:5341   */\n      swap2\n      pop\n        /* \"#utility.yul\":5355:5375   */\n      tag_263\n        /* \"#utility.yul\":5373:5374   */\n      dup4\n        /* \"#utility.yul\":5355:5375   */\n      tag_173\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5350:5375   */\n      swap3\n      pop\n        /* \"#utility.yul\":5398:5399   */\n      dup3\n        /* \"#utility.yul\":5395:5396   */\n      dup3\n        /* \"#utility.yul\":5391:5400   */\n      add\n        /* \"#utility.yul\":5384:5400   */\n      swap1\n      pop\n        /* \"#utility.yul\":5419:5422   */\n      dup1\n        /* \"#utility.yul\":5416:5417   */\n      dup3\n        /* \"#utility.yul\":5413:5423   */\n      gt\n        /* \"#utility.yul\":5410:5446   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":5426:5444   */\n      tag_265\n      tag_181\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5410:5446   */\n    tag_264:\n        /* \"#utility.yul\":5262:5453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5459:5641   */\n    tag_183:\n        /* \"#utility.yul\":5599:5633   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5587:5593   */\n      dup3\n        /* \"#utility.yul\":5583:5597   */\n      add\n        /* \"#utility.yul\":5576:5634   */\n      mstore\n        /* \"#utility.yul\":5459:5641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:6013   */\n    tag_184:\n        /* \"#utility.yul\":5789:5792   */\n      0x00\n        /* \"#utility.yul\":5810:5877   */\n      tag_268\n        /* \"#utility.yul\":5874:5876   */\n      0x20\n        /* \"#utility.yul\":5869:5872   */\n      dup4\n        /* \"#utility.yul\":5810:5877   */\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5803:5877   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5979   */\n      tag_269\n        /* \"#utility.yul\":5975:5978   */\n      dup3\n        /* \"#utility.yul\":5886:5979   */\n      tag_183\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6004:6006   */\n      0x20\n        /* \"#utility.yul\":5999:6002   */\n      dup3\n        /* \"#utility.yul\":5995:6007   */\n      add\n        /* \"#utility.yul\":5988:6007   */\n      swap1\n      pop\n        /* \"#utility.yul\":5647:6013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6438   */\n    tag_116:\n        /* \"#utility.yul\":6185:6189   */\n      0x00\n        /* \"#utility.yul\":6223:6225   */\n      0x20\n        /* \"#utility.yul\":6212:6221   */\n      dup3\n        /* \"#utility.yul\":6208:6226   */\n      add\n        /* \"#utility.yul\":6200:6226   */\n      swap1\n      pop\n        /* \"#utility.yul\":6272:6281   */\n      dup2\n        /* \"#utility.yul\":6266:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6282   */\n      sub\n        /* \"#utility.yul\":6258:6259   */\n      0x00\n        /* \"#utility.yul\":6247:6256   */\n      dup4\n        /* \"#utility.yul\":6243:6260   */\n      add\n        /* \"#utility.yul\":6236:6283   */\n      mstore\n        /* \"#utility.yul\":6300:6431   */\n      tag_271\n        /* \"#utility.yul\":6426:6430   */\n      dup2\n        /* \"#utility.yul\":6300:6431   */\n      tag_184\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6292:6431   */\n      swap1\n      pop\n        /* \"#utility.yul\":6019:6438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6444:6776   */\n    tag_123:\n        /* \"#utility.yul\":6565:6569   */\n      0x00\n        /* \"#utility.yul\":6603:6605   */\n      0x40\n        /* \"#utility.yul\":6592:6601   */\n      dup3\n        /* \"#utility.yul\":6588:6606   */\n      add\n        /* \"#utility.yul\":6580:6606   */\n      swap1\n      pop\n        /* \"#utility.yul\":6616:6687   */\n      tag_273\n        /* \"#utility.yul\":6684:6685   */\n      0x00\n        /* \"#utility.yul\":6673:6682   */\n      dup4\n        /* \"#utility.yul\":6669:6686   */\n      add\n        /* \"#utility.yul\":6660:6666   */\n      dup6\n        /* \"#utility.yul\":6616:6687   */\n      tag_172\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6697:6769   */\n      tag_274\n        /* \"#utility.yul\":6765:6767   */\n      0x20\n        /* \"#utility.yul\":6754:6763   */\n      dup4\n        /* \"#utility.yul\":6750:6768   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6697:6769   */\n      tag_174\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6444:6776   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6782:6872   */\n    tag_185:\n        /* \"#utility.yul\":6816:6823   */\n      0x00\n        /* \"#utility.yul\":6859:6864   */\n      dup2\n        /* \"#utility.yul\":6852:6865   */\n      iszero\n        /* \"#utility.yul\":6845:6866   */\n      iszero\n        /* \"#utility.yul\":6834:6866   */\n      swap1\n      pop\n        /* \"#utility.yul\":6782:6872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6878:6994   */\n    tag_186:\n        /* \"#utility.yul\":6948:6969   */\n      tag_277\n        /* \"#utility.yul\":6963:6968   */\n      dup2\n        /* \"#utility.yul\":6948:6969   */\n      tag_185\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6941:6946   */\n      dup2\n        /* \"#utility.yul\":6938:6970   */\n      eq\n        /* \"#utility.yul\":6928:6988   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":6984:6985   */\n      0x00\n        /* \"#utility.yul\":6981:6982   */\n      dup1\n        /* \"#utility.yul\":6974:6986   */\n      revert\n        /* \"#utility.yul\":6928:6988   */\n    tag_278:\n        /* \"#utility.yul\":6878:6994   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7000:7137   */\n    tag_187:\n        /* \"#utility.yul\":7054:7059   */\n      0x00\n        /* \"#utility.yul\":7085:7091   */\n      dup2\n        /* \"#utility.yul\":7079:7092   */\n      mload\n        /* \"#utility.yul\":7070:7092   */\n      swap1\n      pop\n        /* \"#utility.yul\":7101:7131   */\n      tag_280\n        /* \"#utility.yul\":7125:7130   */\n      dup2\n        /* \"#utility.yul\":7101:7131   */\n      tag_186\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":7000:7137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7143:7488   */\n    tag_130:\n        /* \"#utility.yul\":7210:7216   */\n      0x00\n        /* \"#utility.yul\":7259:7261   */\n      0x20\n        /* \"#utility.yul\":7247:7256   */\n      dup3\n        /* \"#utility.yul\":7238:7245   */\n      dup5\n        /* \"#utility.yul\":7234:7257   */\n      sub\n        /* \"#utility.yul\":7230:7262   */\n      slt\n        /* \"#utility.yul\":7227:7346   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":7265:7344   */\n      tag_283\n      tag_166\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7227:7346   */\n    tag_282:\n        /* \"#utility.yul\":7385:7386   */\n      0x00\n        /* \"#utility.yul\":7410:7471   */\n      tag_284\n        /* \"#utility.yul\":7463:7470   */\n      dup5\n        /* \"#utility.yul\":7454:7460   */\n      dup3\n        /* \"#utility.yul\":7443:7452   */\n      dup6\n        /* \"#utility.yul\":7439:7461   */\n      add\n        /* \"#utility.yul\":7410:7471   */\n      tag_187\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7400:7471   */\n      swap2\n      pop\n        /* \"#utility.yul\":7356:7481   */\n      pop\n        /* \"#utility.yul\":7143:7488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7494:7723   */\n    tag_188:\n        /* \"#utility.yul\":7634:7668   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":7630:7631   */\n      0x00\n        /* \"#utility.yul\":7622:7628   */\n      dup3\n        /* \"#utility.yul\":7618:7632   */\n      add\n        /* \"#utility.yul\":7611:7669   */\n      mstore\n        /* \"#utility.yul\":7703:7715   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7698:7700   */\n      0x20\n        /* \"#utility.yul\":7690:7696   */\n      dup3\n        /* \"#utility.yul\":7686:7701   */\n      add\n        /* \"#utility.yul\":7679:7716   */\n      mstore\n        /* \"#utility.yul\":7494:7723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7729:8095   */\n    tag_189:\n        /* \"#utility.yul\":7871:7874   */\n      0x00\n        /* \"#utility.yul\":7892:7959   */\n      tag_287\n        /* \"#utility.yul\":7956:7958   */\n      0x2a\n        /* \"#utility.yul\":7951:7954   */\n      dup4\n        /* \"#utility.yul\":7892:7959   */\n      tag_177\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7885:7959   */\n      swap2\n      pop\n        /* \"#utility.yul\":7968:8061   */\n      tag_288\n        /* \"#utility.yul\":8057:8060   */\n      dup3\n        /* \"#utility.yul\":7968:8061   */\n      tag_188\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8086:8088   */\n      0x40\n        /* \"#utility.yul\":8081:8084   */\n      dup3\n        /* \"#utility.yul\":8077:8089   */\n      add\n        /* \"#utility.yul\":8070:8089   */\n      swap1\n      pop\n        /* \"#utility.yul\":7729:8095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8101:8520   */\n    tag_133:\n        /* \"#utility.yul\":8267:8271   */\n      0x00\n        /* \"#utility.yul\":8305:8307   */\n      0x20\n        /* \"#utility.yul\":8294:8303   */\n      dup3\n        /* \"#utility.yul\":8290:8308   */\n      add\n        /* \"#utility.yul\":8282:8308   */\n      swap1\n      pop\n        /* \"#utility.yul\":8354:8363   */\n      dup2\n        /* \"#utility.yul\":8348:8352   */\n      dup2\n        /* \"#utility.yul\":8344:8364   */\n      sub\n        /* \"#utility.yul\":8340:8341   */\n      0x00\n        /* \"#utility.yul\":8329:8338   */\n      dup4\n        /* \"#utility.yul\":8325:8342   */\n      add\n        /* \"#utility.yul\":8318:8365   */\n      mstore\n        /* \"#utility.yul\":8382:8513   */\n      tag_290\n        /* \"#utility.yul\":8508:8512   */\n      dup2\n        /* \"#utility.yul\":8382:8513   */\n      tag_189\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8374:8513   */\n      swap1\n      pop\n        /* \"#utility.yul\":8101:8520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8751   */\n    tag_190:\n        /* \"#utility.yul\":8666:8700   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8662:8663   */\n      0x00\n        /* \"#utility.yul\":8654:8660   */\n      dup3\n        /* \"#utility.yul\":8650:8664   */\n      add\n        /* \"#utility.yul\":8643:8701   */\n      mstore\n        /* \"#utility.yul\":8735:8743   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8722:8728   */\n      dup3\n        /* \"#utility.yul\":8718:8733   */\n      add\n        /* \"#utility.yul\":8711:8744   */\n      mstore\n        /* \"#utility.yul\":8526:8751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:9123   */\n    tag_191:\n        /* \"#utility.yul\":8899:8902   */\n      0x00\n        /* \"#utility.yul\":8920:8987   */\n      tag_293\n        /* \"#utility.yul\":8984:8986   */\n      0x26\n        /* \"#utility.yul\":8979:8982   */\n      dup4\n        /* \"#utility.yul\":8920:8987   */\n      tag_177\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8913:8987   */\n      swap2\n      pop\n        /* \"#utility.yul\":8996:9089   */\n      tag_294\n        /* \"#utility.yul\":9085:9088   */\n      dup3\n        /* \"#utility.yul\":8996:9089   */\n      tag_190\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9114:9116   */\n      0x40\n        /* \"#utility.yul\":9109:9112   */\n      dup3\n        /* \"#utility.yul\":9105:9117   */\n      add\n        /* \"#utility.yul\":9098:9117   */\n      swap1\n      pop\n        /* \"#utility.yul\":8757:9123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9548   */\n    tag_140:\n        /* \"#utility.yul\":9295:9299   */\n      0x00\n        /* \"#utility.yul\":9333:9335   */\n      0x20\n        /* \"#utility.yul\":9322:9331   */\n      dup3\n        /* \"#utility.yul\":9318:9336   */\n      add\n        /* \"#utility.yul\":9310:9336   */\n      swap1\n      pop\n        /* \"#utility.yul\":9382:9391   */\n      dup2\n        /* \"#utility.yul\":9376:9380   */\n      dup2\n        /* \"#utility.yul\":9372:9392   */\n      sub\n        /* \"#utility.yul\":9368:9369   */\n      0x00\n        /* \"#utility.yul\":9357:9366   */\n      dup4\n        /* \"#utility.yul\":9353:9370   */\n      add\n        /* \"#utility.yul\":9346:9393   */\n      mstore\n        /* \"#utility.yul\":9410:9541   */\n      tag_296\n        /* \"#utility.yul\":9536:9540   */\n      dup2\n        /* \"#utility.yul\":9410:9541   */\n      tag_191\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9402:9541   */\n      swap1\n      pop\n        /* \"#utility.yul\":9129:9548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9554:9652   */\n    tag_192:\n        /* \"#utility.yul\":9605:9611   */\n      0x00\n        /* \"#utility.yul\":9639:9644   */\n      dup2\n        /* \"#utility.yul\":9633:9645   */\n      mload\n        /* \"#utility.yul\":9623:9645   */\n      swap1\n      pop\n        /* \"#utility.yul\":9554:9652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9658:9805   */\n    tag_193:\n        /* \"#utility.yul\":9759:9770   */\n      0x00\n        /* \"#utility.yul\":9796:9799   */\n      dup2\n        /* \"#utility.yul\":9781:9799   */\n      swap1\n      pop\n        /* \"#utility.yul\":9658:9805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9811:10057   */\n    tag_194:\n        /* \"#utility.yul\":9892:9893   */\n      0x00\n        /* \"#utility.yul\":9902:10015   */\n    tag_300:\n        /* \"#utility.yul\":9916:9922   */\n      dup4\n        /* \"#utility.yul\":9913:9914   */\n      dup2\n        /* \"#utility.yul\":9910:9923   */\n      lt\n        /* \"#utility.yul\":9902:10015   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":10001:10002   */\n      dup1\n        /* \"#utility.yul\":9996:9999   */\n      dup3\n        /* \"#utility.yul\":9992:10003   */\n      add\n        /* \"#utility.yul\":9986:10004   */\n      mload\n        /* \"#utility.yul\":9982:9983   */\n      dup2\n        /* \"#utility.yul\":9977:9980   */\n      dup5\n        /* \"#utility.yul\":9973:9984   */\n      add\n        /* \"#utility.yul\":9966:10005   */\n      mstore\n        /* \"#utility.yul\":9938:9940   */\n      0x20\n        /* \"#utility.yul\":9935:9936   */\n      dup2\n        /* \"#utility.yul\":9931:9941   */\n      add\n        /* \"#utility.yul\":9926:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9902:10015   */\n      jump(tag_300)\n    tag_302:\n        /* \"#utility.yul\":10049:10050   */\n      0x00\n        /* \"#utility.yul\":10040:10046   */\n      dup5\n        /* \"#utility.yul\":10035:10038   */\n      dup5\n        /* \"#utility.yul\":10031:10047   */\n      add\n        /* \"#utility.yul\":10024:10051   */\n      mstore\n        /* \"#utility.yul\":9873:10057   */\n      pop\n        /* \"#utility.yul\":9811:10057   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10063:10449   */\n    tag_195:\n        /* \"#utility.yul\":10167:10170   */\n      0x00\n        /* \"#utility.yul\":10195:10233   */\n      tag_304\n        /* \"#utility.yul\":10227:10232   */\n      dup3\n        /* \"#utility.yul\":10195:10233   */\n      tag_192\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10249:10337   */\n      tag_305\n        /* \"#utility.yul\":10330:10336   */\n      dup2\n        /* \"#utility.yul\":10325:10328   */\n      dup6\n        /* \"#utility.yul\":10249:10337   */\n      tag_193\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10242:10337   */\n      swap4\n      pop\n        /* \"#utility.yul\":10346:10411   */\n      tag_306\n        /* \"#utility.yul\":10404:10410   */\n      dup2\n        /* \"#utility.yul\":10399:10402   */\n      dup6\n        /* \"#utility.yul\":10392:10396   */\n      0x20\n        /* \"#utility.yul\":10385:10390   */\n      dup7\n        /* \"#utility.yul\":10381:10397   */\n      add\n        /* \"#utility.yul\":10346:10411   */\n      tag_194\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10436:10442   */\n      dup1\n        /* \"#utility.yul\":10431:10434   */\n      dup5\n        /* \"#utility.yul\":10427:10443   */\n      add\n        /* \"#utility.yul\":10420:10443   */\n      swap2\n      pop\n        /* \"#utility.yul\":10171:10449   */\n      pop\n        /* \"#utility.yul\":10063:10449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10455:10726   */\n    tag_142:\n        /* \"#utility.yul\":10585:10588   */\n      0x00\n        /* \"#utility.yul\":10607:10700   */\n      tag_308\n        /* \"#utility.yul\":10696:10699   */\n      dup3\n        /* \"#utility.yul\":10687:10693   */\n      dup5\n        /* \"#utility.yul\":10607:10700   */\n      tag_195\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10600:10700   */\n      swap2\n      pop\n        /* \"#utility.yul\":10717:10720   */\n      dup2\n        /* \"#utility.yul\":10710:10720   */\n      swap1\n      pop\n        /* \"#utility.yul\":10455:10726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10732:10911   */\n    tag_196:\n        /* \"#utility.yul\":10872:10903   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10868:10869   */\n      0x00\n        /* \"#utility.yul\":10860:10866   */\n      dup3\n        /* \"#utility.yul\":10856:10870   */\n      add\n        /* \"#utility.yul\":10849:10904   */\n      mstore\n        /* \"#utility.yul\":10732:10911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10917:11283   */\n    tag_197:\n        /* \"#utility.yul\":11059:11062   */\n      0x00\n        /* \"#utility.yul\":11080:11147   */\n      tag_311\n        /* \"#utility.yul\":11144:11146   */\n      0x1d\n        /* \"#utility.yul\":11139:11142   */\n      dup4\n        /* \"#utility.yul\":11080:11147   */\n      tag_177\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11073:11147   */\n      swap2\n      pop\n        /* \"#utility.yul\":11156:11249   */\n      tag_312\n        /* \"#utility.yul\":11245:11248   */\n      dup3\n        /* \"#utility.yul\":11156:11249   */\n      tag_196\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11274:11276   */\n      0x20\n        /* \"#utility.yul\":11269:11272   */\n      dup3\n        /* \"#utility.yul\":11265:11277   */\n      add\n        /* \"#utility.yul\":11258:11277   */\n      swap1\n      pop\n        /* \"#utility.yul\":10917:11283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11289:11708   */\n    tag_155:\n        /* \"#utility.yul\":11455:11459   */\n      0x00\n        /* \"#utility.yul\":11493:11495   */\n      0x20\n        /* \"#utility.yul\":11482:11491   */\n      dup3\n        /* \"#utility.yul\":11478:11496   */\n      add\n        /* \"#utility.yul\":11470:11496   */\n      swap1\n      pop\n        /* \"#utility.yul\":11542:11551   */\n      dup2\n        /* \"#utility.yul\":11536:11540   */\n      dup2\n        /* \"#utility.yul\":11532:11552   */\n      sub\n        /* \"#utility.yul\":11528:11529   */\n      0x00\n        /* \"#utility.yul\":11517:11526   */\n      dup4\n        /* \"#utility.yul\":11513:11530   */\n      add\n        /* \"#utility.yul\":11506:11553   */\n      mstore\n        /* \"#utility.yul\":11570:11701   */\n      tag_314\n        /* \"#utility.yul\":11696:11700   */\n      dup2\n        /* \"#utility.yul\":11570:11701   */\n      tag_197\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11562:11701   */\n      swap1\n      pop\n        /* \"#utility.yul\":11289:11708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11714:11813   */\n    tag_198:\n        /* \"#utility.yul\":11766:11772   */\n      0x00\n        /* \"#utility.yul\":11800:11805   */\n      dup2\n        /* \"#utility.yul\":11794:11806   */\n      mload\n        /* \"#utility.yul\":11784:11806   */\n      swap1\n      pop\n        /* \"#utility.yul\":11714:11813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11819:11921   */\n    tag_199:\n        /* \"#utility.yul\":11860:11866   */\n      0x00\n        /* \"#utility.yul\":11911:11913   */\n      0x1f\n        /* \"#utility.yul\":11907:11914   */\n      not\n        /* \"#utility.yul\":11902:11904   */\n      0x1f\n        /* \"#utility.yul\":11895:11900   */\n      dup4\n        /* \"#utility.yul\":11891:11905   */\n      add\n        /* \"#utility.yul\":11887:11915   */\n      and\n        /* \"#utility.yul\":11877:11915   */\n      swap1\n      pop\n        /* \"#utility.yul\":11819:11921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11927:12304   */\n    tag_200:\n        /* \"#utility.yul\":12015:12018   */\n      0x00\n        /* \"#utility.yul\":12043:12082   */\n      tag_318\n        /* \"#utility.yul\":12076:12081   */\n      dup3\n        /* \"#utility.yul\":12043:12082   */\n      tag_198\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12098:12169   */\n      tag_319\n        /* \"#utility.yul\":12162:12168   */\n      dup2\n        /* \"#utility.yul\":12157:12160   */\n      dup6\n        /* \"#utility.yul\":12098:12169   */\n      tag_177\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12091:12169   */\n      swap4\n      pop\n        /* \"#utility.yul\":12178:12243   */\n      tag_320\n        /* \"#utility.yul\":12236:12242   */\n      dup2\n        /* \"#utility.yul\":12231:12234   */\n      dup6\n        /* \"#utility.yul\":12224:12228   */\n      0x20\n        /* \"#utility.yul\":12217:12222   */\n      dup7\n        /* \"#utility.yul\":12213:12229   */\n      add\n        /* \"#utility.yul\":12178:12243   */\n      tag_194\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12268:12297   */\n      tag_321\n        /* \"#utility.yul\":12290:12296   */\n      dup2\n        /* \"#utility.yul\":12268:12297   */\n      tag_199\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12263:12266   */\n      dup5\n        /* \"#utility.yul\":12259:12298   */\n      add\n        /* \"#utility.yul\":12252:12298   */\n      swap2\n      pop\n        /* \"#utility.yul\":12019:12304   */\n      pop\n        /* \"#utility.yul\":11927:12304   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12310:12623   */\n    tag_164:\n        /* \"#utility.yul\":12423:12427   */\n      0x00\n        /* \"#utility.yul\":12461:12463   */\n      0x20\n        /* \"#utility.yul\":12450:12459   */\n      dup3\n        /* \"#utility.yul\":12446:12464   */\n      add\n        /* \"#utility.yul\":12438:12464   */\n      swap1\n      pop\n        /* \"#utility.yul\":12510:12519   */\n      dup2\n        /* \"#utility.yul\":12504:12508   */\n      dup2\n        /* \"#utility.yul\":12500:12520   */\n      sub\n        /* \"#utility.yul\":12496:12497   */\n      0x00\n        /* \"#utility.yul\":12485:12494   */\n      dup4\n        /* \"#utility.yul\":12481:12498   */\n      add\n        /* \"#utility.yul\":12474:12521   */\n      mstore\n        /* \"#utility.yul\":12538:12616   */\n      tag_323\n        /* \"#utility.yul\":12611:12615   */\n      dup2\n        /* \"#utility.yul\":12602:12608   */\n      dup5\n        /* \"#utility.yul\":12538:12616   */\n      tag_200\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12530:12616   */\n      swap1\n      pop\n        /* \"#utility.yul\":12310:12623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bd94965dd8779c9c981564d49f655be2ba1a169435fd4cfa2c51ba5f9edf757e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1179": {
									"entryPoint": null,
									"id": 1179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1092": {
									"entryPoint": 154,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 224,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_172": {
									"entryPoint": 162,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b50604051620017573803806200175783398181016040528101906200003791906200020e565b620000576200004b6200009a60201b60201c565b620000a260201b60201c565b60016002819055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000240565b600033905090565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055620000dd81620000e060201b620009591760201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d682620001a9565b9050919050565b620001e881620001c9565b8114620001f457600080fd5b50565b6000815190506200020881620001dd565b92915050565b600060208284031215620002275762000226620001a4565b5b60006200023784828501620001f7565b91505092915050565b6080516114df62000278600039600081816106c201528181610775015281816107ce0152818161082601526108c501526114df6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639752b3b2116100715780639752b3b214610118578063979e905614610134578063e30c397814610152578063e7fcd45d14610170578063f2fde38b1461018c578063f6151089146101a8576100a9565b80631f068108146100ae578063715018a6146100ca57806379ba5097146100d45780638da5cb5b146100de5780638f88f261146100fc575b600080fd5b6100c860048036038101906100c39190610e52565b6101b2565b005b6100d26102a7565b005b6100dc6102bb565b005b6100e6610348565b6040516100f39190610e8e565b60405180910390f35b61011660048036038101906101119190610e52565b610371565b005b610132600480360381019061012d9190610e52565b610466565b005b61013c61055b565b6040516101499190610ec2565b60405180910390f35b61015a610561565b6040516101679190610e8e565b60405180910390f35b61018a60048036038101906101859190610f09565b61058b565b005b6101a660048036038101906101a19190610e52565b610604565b005b6101b06106b1565b005b6101ba610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610220576040517f842090f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f0cd19529020fd81d84beeae5290e80cef2820b494e9aedf821b3c45b8110d7df60405160405180910390a250565b6102af610a1d565b6102b96000610a9b565b565b60006102c5610acc565b90508073ffffffffffffffffffffffffffffffffffffffff166102e6610561565b73ffffffffffffffffffffffffffffffffffffffff161461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033390610fb9565b60405180910390fd5b61034581610a9b565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610379610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103df576040517f842090f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f203661c8635f7afb5f15d76e6b159110290d075ad62b4ee9ff9a7ab94187d4bd60405160405180910390a250565b61046e610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d4576040517f842090f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f170b0500ccf8a13146ecd9838c59849129b54beda77dadbe500b8817cdc8d36860405160405180910390a250565b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610593610a1d565b600081036105cd576040517fc830261600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600681905550807f3d5a337607048974766ec58e2109261b4871329988d9615e7051bae635c38a6060405160405180910390a250565b61060c610a1d565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1661066c610348565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6106b9610a1d565b600060065460647f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107199190610e8e565b602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fee565b610764919061104a565b61076e91906110bb565b90506107c97f0000000000000000000000000000000000000000000000000000000000000000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002846107c491906110bb565b610ad4565b6108227f0000000000000000000000000000000000000000000000000000000000000000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028461081d91906110bb565b610ad4565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161087d9190610e8e565b602060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190610fee565b905061090d7f0000000000000000000000000000000000000000000000000000000000000000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610ad4565b806007600082825461091f91906110ec565b925050819055508082427f50efd2f2f250964da5961d710f9e330ea396faec8ef1e3dad48ff354a629d38260405160405180910390a45050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a25610acc565b73ffffffffffffffffffffffffffffffffffffffff16610a43610348565b73ffffffffffffffffffffffffffffffffffffffff1614610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a909061116c565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610ac981610959565b50565b600033905090565b610b558363a9059cbb60e01b8484604051602401610af392919061118c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b5a565b505050565b6000610bbc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c229092919063ffffffff16565b9050600081511480610bde575080806020019051810190610bdd91906111ed565b5b610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c149061128c565b60405180910390fd5b505050565b6060610c318484600085610c3a565b90509392505050565b606082471015610c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c769061131e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ca891906113af565b60006040518083038185875af1925050503d8060008114610ce5576040519150601f19603f3d011682016040523d82523d6000602084013e610cea565b606091505b5091509150610cfb87838387610d07565b92505050949350505050565b60608315610d69576000835103610d6157610d2185610d7c565b610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790611412565b60405180910390fd5b5b829050610d74565b610d738383610d9f565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610db25781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de69190611487565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1f82610df4565b9050919050565b610e2f81610e14565b8114610e3a57600080fd5b50565b600081359050610e4c81610e26565b92915050565b600060208284031215610e6857610e67610def565b5b6000610e7684828501610e3d565b91505092915050565b610e8881610e14565b82525050565b6000602082019050610ea36000830184610e7f565b92915050565b6000819050919050565b610ebc81610ea9565b82525050565b6000602082019050610ed76000830184610eb3565b92915050565b610ee681610ea9565b8114610ef157600080fd5b50565b600081359050610f0381610edd565b92915050565b600060208284031215610f1f57610f1e610def565b5b6000610f2d84828501610ef4565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610fa3602983610f36565b9150610fae82610f47565b604082019050919050565b60006020820190508181036000830152610fd281610f96565b9050919050565b600081519050610fe881610edd565b92915050565b60006020828403121561100457611003610def565b5b600061101284828501610fd9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061105582610ea9565b915061106083610ea9565b925082820261106e81610ea9565b915082820484148315176110855761108461101b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110c682610ea9565b91506110d183610ea9565b9250826110e1576110e061108c565b5b828204905092915050565b60006110f782610ea9565b915061110283610ea9565b925082820190508082111561111a5761111961101b565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611156602083610f36565b915061116182611120565b602082019050919050565b6000602082019050818103600083015261118581611149565b9050919050565b60006040820190506111a16000830185610e7f565b6111ae6020830184610eb3565b9392505050565b60008115159050919050565b6111ca816111b5565b81146111d557600080fd5b50565b6000815190506111e7816111c1565b92915050565b60006020828403121561120357611202610def565b5b6000611211848285016111d8565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611276602a83610f36565b91506112818261121a565b604082019050919050565b600060208201905081810360008301526112a581611269565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611308602683610f36565b9150611313826112ac565b604082019050919050565b60006020820190508181036000830152611337816112fb565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611372578082015181840152602081019050611357565b60008484015250505050565b60006113898261133e565b6113938185611349565b93506113a3818560208601611354565b80840191505092915050565b60006113bb828461137e565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006113fc601d83610f36565b9150611407826113c6565b602082019050919050565b6000602082019050818103600083015261142b816113ef565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061145982611432565b6114638185610f36565b9350611473818560208601611354565b61147c8161143d565b840191505092915050565b600060208201905081810360008301526114a1818461144e565b90509291505056fea2646970667358221220bd94965dd8779c9c981564d49f655be2ba1a169435fd4cfa2c51ba5f9edf757e64736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1757 CODESIZE SUB DUP1 PUSH3 0x1757 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x20E JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x9A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xA2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x240 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH3 0xDD DUP2 PUSH3 0xE0 PUSH1 0x20 SHL PUSH3 0x959 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D6 DUP3 PUSH3 0x1A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1E8 DUP2 PUSH3 0x1C9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x208 DUP2 PUSH3 0x1DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x227 JUMPI PUSH3 0x226 PUSH3 0x1A4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x237 DUP5 DUP3 DUP6 ADD PUSH3 0x1F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x14DF PUSH3 0x278 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6C2 ADD MSTORE DUP2 DUP2 PUSH2 0x775 ADD MSTORE DUP2 DUP2 PUSH2 0x7CE ADD MSTORE DUP2 DUP2 PUSH2 0x826 ADD MSTORE PUSH2 0x8C5 ADD MSTORE PUSH2 0x14DF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9752B3B2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9752B3B2 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x979E9056 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xE7FCD45D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF6151089 EQ PUSH2 0x1A8 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1F068108 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8F88F261 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x2BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13C PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x842090F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD19529020FD81D84BEEAE5290E80CEF2820B494E9AEDF821B3C45B8110D7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x2B9 PUSH1 0x0 PUSH2 0xA9B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 PUSH2 0xACC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E6 PUSH2 0x561 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP2 PUSH2 0xA9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x379 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x842090F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x203661C8635F7AFB5F15D76E6B159110290D075AD62B4EE9FF9A7AB94187D4BD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x46E PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x842090F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x170B0500CCF8A13146ECD9838C59849129B54BEDA77DADBE500B8817CDC8D368 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x593 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xC830261600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH32 0x3D5A337607048974766EC58E2109261B4871329988D9615E7051BAE635C38A60 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x60C PUSH2 0xA1D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x66C PUSH2 0x348 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x736 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75A SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST SWAP1 POP PUSH2 0x7C9 PUSH32 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP5 PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x822 PUSH32 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP5 PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP PUSH2 0x90D PUSH32 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 TIMESTAMP PUSH32 0x50EFD2F2F250964DA5961D710F9E330EA396FAEC8EF1E3DAD48FF354A629D382 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA25 PUSH2 0xACC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA43 PUSH2 0x348 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xAC9 DUP2 PUSH2 0x959 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB55 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAF3 SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB5A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC22 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0xBDE JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST JUMPDEST PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC14 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC31 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xC3A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC76 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xCFB DUP8 DUP4 DUP4 DUP8 PUSH2 0xD07 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xD61 JUMPI PUSH2 0xD21 DUP6 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xD73 DUP4 DUP4 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xDB2 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE6 SWAP2 SWAP1 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F DUP3 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0xE14 JUMP JUMPDEST DUP2 EQ PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4C DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE68 JUMPI PUSH2 0xE67 PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE76 DUP5 DUP3 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE88 DUP2 PUSH2 0xE14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBC DUP2 PUSH2 0xEA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0xEA9 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF03 DUP2 PUSH2 0xEDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2D DUP5 DUP3 DUP6 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA3 PUSH1 0x29 DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE DUP3 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD2 DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE8 DUP2 PUSH2 0xEDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1003 PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1012 DUP5 DUP3 DUP6 ADD PUSH2 0xFD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1055 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1060 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x106E DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1085 JUMPI PUSH2 0x1084 PUSH2 0x101B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C6 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D1 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10E1 JUMPI PUSH2 0x10E0 PUSH2 0x108C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F7 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1102 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x111A JUMPI PUSH2 0x1119 PUSH2 0x101B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1156 PUSH1 0x20 DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1161 DUP3 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1185 DUP2 PUSH2 0x1149 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11A1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x11AE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x11B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11E7 DUP2 PUSH2 0x11C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1211 DUP5 DUP3 DUP6 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1276 PUSH1 0x2A DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1281 DUP3 PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12A5 DUP2 PUSH2 0x1269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1308 PUSH1 0x26 DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1313 DUP3 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1337 DUP2 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1389 DUP3 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x1393 DUP2 DUP6 PUSH2 0x1349 JUMP JUMPDEST SWAP4 POP PUSH2 0x13A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1354 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BB DUP3 DUP5 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC PUSH1 0x1D DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1407 DUP3 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142B DUP2 PUSH2 0x13EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1459 DUP3 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x1463 DUP2 DUP6 PUSH2 0xF36 JUMP JUMPDEST SWAP4 POP PUSH2 0x1473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x143D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A1 DUP2 DUP5 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP5 SWAP7 0x5D 0xD8 PUSH24 0x9C9C981564D49F655BE2BA1A169435FD4CFA2C51BA5F9EDF PUSH22 0x7E64736F6C6343000812003300000000000000000000 ",
							"sourceMap": "412:3450:8:-:0;;;1732:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:2;1821:7;:22;;;;1789:7:8;1772:25;;;;;;;;;;1732:73;412:3450;;640:96:7;693:7;719:10;712:17;;640:96;:::o;1501:153:1:-;1590:13;;1583:20;;;;;;;;;;;1613:34;1638:8;1613:24;;;;;:34;;:::i;:::-;1501:153;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;412:3450:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_701": {
									"entryPoint": 2906,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2589,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1092": {
									"entryPoint": 2764,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1079": {
									"entryPoint": 3487,
									"id": 1079,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 2393,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_172": {
									"entryPoint": 2715,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_194": {
									"entryPoint": 699,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_904": {
									"entryPoint": 3130,
									"id": 904,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_840": {
									"entryPoint": 3106,
									"id": 840,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_768": {
									"entryPoint": 3452,
									"id": 768,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 840,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_135": {
									"entryPoint": 1377,
									"id": 135,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 679,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_407": {
									"entryPoint": 2772,
									"id": 407,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setBribingWallet_1302": {
									"entryPoint": 1126,
									"id": 1302,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setEqualDaoWallet_1358": {
									"entryPoint": 881,
									"id": 1358,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPantheonWallet_1330": {
									"entryPoint": 434,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProfitDivider_1274": {
									"entryPoint": 1419,
									"id": 1274,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@splitFees_1250": {
									"entryPoint": 1713,
									"id": 1250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBribes_1141": {
									"entryPoint": 1371,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_155": {
									"entryPoint": 1540,
									"id": 155,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1035": {
									"entryPoint": 3335,
									"id": 1035,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12626:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:9"
															},
															"nodeType": "YulIf",
															"src": "917:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:9",
														"type": ""
													}
												],
												"src": "841:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:9",
														"type": ""
													}
												],
												"src": "1176:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:9",
														"type": ""
													}
												],
												"src": "1300:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1583:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1594:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1583:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1555:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1565:7:9",
														"type": ""
													}
												],
												"src": "1528:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:9",
														"type": ""
													}
												],
												"src": "1611:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:9",
														"type": ""
													}
												],
												"src": "1735:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2063:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:43:9"
															},
															"nodeType": "YulIf",
															"src": "2016:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1999:5:9",
														"type": ""
													}
												],
												"src": "1963:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2143:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2153:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2121:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2129:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:9",
														"type": ""
													}
												],
												"src": "2091:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:9"
															},
															"nodeType": "YulIf",
															"src": "2312:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2283:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:9",
														"type": ""
													}
												],
												"src": "2236:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2667:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2684:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2705:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2705:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2639:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2644:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2655:11:9",
														"type": ""
													}
												],
												"src": "2571:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2874:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2870:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2870:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c6532537465703a2063616c6c6572206973206e6f742074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2886:34:9",
																		"type": "",
																		"value": "Ownable2Step: caller is not the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2863:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2942:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2950:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:15:9"
																	},
																	{
																		"hexValue": "6e6577206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2955:11:9",
																		"type": "",
																		"value": "new owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2844:6:9",
														"type": ""
													}
												],
												"src": "2746:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3126:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3136:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3202:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3207:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3143:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3136:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3308:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																	"nodeType": "YulIdentifier",
																	"src": "3219:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3321:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3332:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3337:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3328:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3114:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3122:3:9",
														"type": ""
													}
												],
												"src": "2980:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3523:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3533:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3545:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3556:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3533:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3580:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3591:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3599:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3605:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3625:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3759:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3633:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3625:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3503:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3518:4:9",
														"type": ""
													}
												],
												"src": "3352:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3850:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3865:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3859:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3850:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3908:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3881:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3881:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3818:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3826:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:9",
														"type": ""
													}
												],
												"src": "3777:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4049:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4051:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4051:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4051:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4024:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4020:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4016:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:32:9"
															},
															"nodeType": "YulIf",
															"src": "4013:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4142:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4157:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4171:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4161:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4186:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4232:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4243:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4228:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4228:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4252:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4196:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4186:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3973:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3984:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3996:6:9",
														"type": ""
													}
												],
												"src": "3926:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4328:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4321:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4452:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4283:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4517:362:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4527:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4550:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4527:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4584:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4566:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4561:1:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4595:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4618:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4621:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4614:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "4599:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4632:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "4661:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4643:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4643:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4632:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4850:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4852:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4852:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4852:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4783:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4776:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4776:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4806:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4813:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4822:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4809:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4809:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4803:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4803:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4756:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4756:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4736:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4736:113:9"
															},
															"nodeType": "YulIf",
															"src": "4733:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4500:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4503:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4509:7:9",
														"type": ""
													}
												],
												"src": "4469:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4913:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4930:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4933:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4923:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4923:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5027:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5030:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5054:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5044:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5044:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4885:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5113:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5123:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5146:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5128:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5128:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5123:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5157:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5180:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5162:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5157:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5204:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5206:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5206:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5201:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5194:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:9:9"
															},
															"nodeType": "YulIf",
															"src": "5191:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5236:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5245:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5248:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5241:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5236:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5102:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5105:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5111:1:9",
														"type": ""
													}
												],
												"src": "5071:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5306:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5316:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5339:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5321:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5316:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5350:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5373:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5355:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5350:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5384:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5395:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5398:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5391:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5424:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5426:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5426:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5426:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5416:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5419:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5413:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:10:9"
															},
															"nodeType": "YulIf",
															"src": "5410:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5293:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5296:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5302:3:9",
														"type": ""
													}
												],
												"src": "5262:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5565:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5587:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5595:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5583:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5599:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5576:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5557:6:9",
														"type": ""
													}
												],
												"src": "5459:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5793:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5803:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5869:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5874:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5810:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5975:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5886:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5886:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5988:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5999:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6004:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5995:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5781:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5789:3:9",
														"type": ""
													}
												],
												"src": "5647:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6190:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6200:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6212:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6223:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6208:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6200:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6247:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6258:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6243:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6266:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6272:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6262:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6236:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6292:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6426:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6300:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6292:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6170:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6185:4:9",
														"type": ""
													}
												],
												"src": "6019:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6570:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6580:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6592:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6580:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6660:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6673:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6684:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6669:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6669:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6616:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6616:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6534:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6546:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6554:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6565:4:9",
														"type": ""
													}
												],
												"src": "6444:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6824:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6834:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6859:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6852:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6852:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6834:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6806:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6816:7:9",
														"type": ""
													}
												],
												"src": "6782:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6918:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6972:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6981:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6984:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6974:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6974:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6974:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6941:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6963:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6948:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6948:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6938:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6938:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6931:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:40:9"
															},
															"nodeType": "YulIf",
															"src": "6928:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6911:5:9",
														"type": ""
													}
												],
												"src": "6878:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7060:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7070:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7079:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7070:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7125:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "7101:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7101:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7038:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7046:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7054:5:9",
														"type": ""
													}
												],
												"src": "7000:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7217:271:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7263:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7265:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7265:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7265:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7238:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7247:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7234:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7259:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7230:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:32:9"
															},
															"nodeType": "YulIf",
															"src": "7227:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7356:125:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7371:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7385:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7375:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7400:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7443:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7454:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7439:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7439:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7463:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7410:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7410:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7400:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7187:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7198:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7210:6:9",
														"type": ""
													}
												],
												"src": "7143:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7600:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7622:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7630:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7618:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7618:14:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7634:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7611:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7611:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7690:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7698:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7686:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7686:15:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7703:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7679:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7679:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7592:6:9",
														"type": ""
													}
												],
												"src": "7494:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7875:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7885:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7951:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7956:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7892:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7892:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7885:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8057:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "7968:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7968:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7968:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8070:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8081:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8077:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8077:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8070:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7863:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7871:3:9",
														"type": ""
													}
												],
												"src": "7729:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8272:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8282:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8294:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8305:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8282:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8329:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8340:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8325:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8325:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8348:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8354:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8344:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8344:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8318:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8318:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8318:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8374:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8508:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8382:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8374:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8252:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8267:4:9",
														"type": ""
													}
												],
												"src": "8101:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8632:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8654:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8662:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8650:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8650:14:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8666:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8643:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8643:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8722:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8730:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8718:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8718:15:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8735:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8711:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8711:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8624:6:9",
														"type": ""
													}
												],
												"src": "8526:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8903:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8913:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8979:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8984:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8920:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9085:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "8996:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8996:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8996:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9109:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9114:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9105:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9105:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9098:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8891:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8899:3:9",
														"type": ""
													}
												],
												"src": "8757:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9300:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9322:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9357:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9368:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9353:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9353:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9376:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9382:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9372:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9372:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9402:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9536:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9410:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9402:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9280:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9295:4:9",
														"type": ""
													}
												],
												"src": "9129:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9612:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9623:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9639:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9633:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9633:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9623:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9595:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9605:6:9",
														"type": ""
													}
												],
												"src": "9554:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9771:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9781:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9796:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9781:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9743:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9748:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9759:11:9",
														"type": ""
													}
												],
												"src": "9658:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9873:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9883:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9892:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9887:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9952:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9977:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9982:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9973:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9973:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9996:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10001:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9992:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9992:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9986:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9986:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9966:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9966:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9966:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9913:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9916:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9910:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9910:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9924:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9926:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9935:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9938:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9931:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9931:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9926:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9906:3:9",
																"statements": []
															},
															"src": "9902:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10035:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10040:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10031:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10031:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10049:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10024:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10024:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9855:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9860:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9865:6:9",
														"type": ""
													}
												],
												"src": "9811:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:278:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10181:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10227:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10195:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10195:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10185:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10242:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10325:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10330:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10249:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10249:88:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10385:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10392:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10381:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10381:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10399:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10404:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10346:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10346:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10420:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10431:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10436:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10427:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10420:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10152:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10159:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10167:3:9",
														"type": ""
													}
												],
												"src": "10063:386:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10589:137:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10600:100:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10687:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10696:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10607:79:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10607:93:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10600:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10710:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10717:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10710:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10568:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10574:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10585:3:9",
														"type": ""
													}
												],
												"src": "10455:271:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10838:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10860:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10868:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10856:14:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10872:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10849:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10830:6:9",
														"type": ""
													}
												],
												"src": "10732:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11063:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11073:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11139:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11144:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11080:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11080:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11073:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11245:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "11156:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11156:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11156:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11258:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11269:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11274:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11258:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11051:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11059:3:9",
														"type": ""
													}
												],
												"src": "10917:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11460:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11470:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11482:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11493:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11478:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11470:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11517:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11528:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11513:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11513:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11536:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11542:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11506:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11562:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11696:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11570:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11570:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11562:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11440:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11455:4:9",
														"type": ""
													}
												],
												"src": "11289:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11773:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11784:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11800:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11794:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11784:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11756:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11766:6:9",
														"type": ""
													}
												],
												"src": "11714:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11867:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11877:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11895:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11902:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11891:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11911:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11907:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11907:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11887:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11887:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11877:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11850:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11860:6:9",
														"type": ""
													}
												],
												"src": "11819:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12019:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12029:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12076:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12043:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12043:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12033:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12091:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12157:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12162:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12098:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12098:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12091:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12217:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12224:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12213:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12231:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12236:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12178:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12178:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12178:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12252:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12290:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12268:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12268:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12259:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12259:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12252:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12000:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12007:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12015:3:9",
														"type": ""
													}
												],
												"src": "11927:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12428:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12438:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12450:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12461:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12446:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12438:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12485:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12496:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12481:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12504:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12510:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12500:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12500:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12530:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12602:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12611:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12538:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12538:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12530:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12400:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12412:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12423:4:9",
														"type": ""
													}
												],
												"src": "12310:313:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable2Step: caller is not the \")\n\n        mstore(add(memPtr, 32), \"new owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1129": [
									{
										"length": 32,
										"start": 1730
									},
									{
										"length": 32,
										"start": 1909
									},
									{
										"length": 32,
										"start": 1998
									},
									{
										"length": 32,
										"start": 2086
									},
									{
										"length": 32,
										"start": 2245
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80639752b3b2116100715780639752b3b214610118578063979e905614610134578063e30c397814610152578063e7fcd45d14610170578063f2fde38b1461018c578063f6151089146101a8576100a9565b80631f068108146100ae578063715018a6146100ca57806379ba5097146100d45780638da5cb5b146100de5780638f88f261146100fc575b600080fd5b6100c860048036038101906100c39190610e52565b6101b2565b005b6100d26102a7565b005b6100dc6102bb565b005b6100e6610348565b6040516100f39190610e8e565b60405180910390f35b61011660048036038101906101119190610e52565b610371565b005b610132600480360381019061012d9190610e52565b610466565b005b61013c61055b565b6040516101499190610ec2565b60405180910390f35b61015a610561565b6040516101679190610e8e565b60405180910390f35b61018a60048036038101906101859190610f09565b61058b565b005b6101a660048036038101906101a19190610e52565b610604565b005b6101b06106b1565b005b6101ba610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610220576040517f842090f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f0cd19529020fd81d84beeae5290e80cef2820b494e9aedf821b3c45b8110d7df60405160405180910390a250565b6102af610a1d565b6102b96000610a9b565b565b60006102c5610acc565b90508073ffffffffffffffffffffffffffffffffffffffff166102e6610561565b73ffffffffffffffffffffffffffffffffffffffff161461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033390610fb9565b60405180910390fd5b61034581610a9b565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610379610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103df576040517f842090f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f203661c8635f7afb5f15d76e6b159110290d075ad62b4ee9ff9a7ab94187d4bd60405160405180910390a250565b61046e610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d4576040517f842090f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f170b0500ccf8a13146ecd9838c59849129b54beda77dadbe500b8817cdc8d36860405160405180910390a250565b60075481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610593610a1d565b600081036105cd576040517fc830261600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600681905550807f3d5a337607048974766ec58e2109261b4871329988d9615e7051bae635c38a6060405160405180910390a250565b61060c610a1d565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1661066c610348565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6106b9610a1d565b600060065460647f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107199190610e8e565b602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190610fee565b610764919061104a565b61076e91906110bb565b90506107c97f0000000000000000000000000000000000000000000000000000000000000000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002846107c491906110bb565b610ad4565b6108227f0000000000000000000000000000000000000000000000000000000000000000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028461081d91906110bb565b610ad4565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161087d9190610e8e565b602060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190610fee565b905061090d7f0000000000000000000000000000000000000000000000000000000000000000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610ad4565b806007600082825461091f91906110ec565b925050819055508082427f50efd2f2f250964da5961d710f9e330ea396faec8ef1e3dad48ff354a629d38260405160405180910390a45050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a25610acc565b73ffffffffffffffffffffffffffffffffffffffff16610a43610348565b73ffffffffffffffffffffffffffffffffffffffff1614610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a909061116c565b60405180910390fd5b565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610ac981610959565b50565b600033905090565b610b558363a9059cbb60e01b8484604051602401610af392919061118c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b5a565b505050565b6000610bbc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c229092919063ffffffff16565b9050600081511480610bde575080806020019051810190610bdd91906111ed565b5b610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c149061128c565b60405180910390fd5b505050565b6060610c318484600085610c3a565b90509392505050565b606082471015610c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c769061131e565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ca891906113af565b60006040518083038185875af1925050503d8060008114610ce5576040519150601f19603f3d011682016040523d82523d6000602084013e610cea565b606091505b5091509150610cfb87838387610d07565b92505050949350505050565b60608315610d69576000835103610d6157610d2185610d7c565b610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790611412565b60405180910390fd5b5b829050610d74565b610d738383610d9f565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610db25781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de69190611487565b60405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1f82610df4565b9050919050565b610e2f81610e14565b8114610e3a57600080fd5b50565b600081359050610e4c81610e26565b92915050565b600060208284031215610e6857610e67610def565b5b6000610e7684828501610e3d565b91505092915050565b610e8881610e14565b82525050565b6000602082019050610ea36000830184610e7f565b92915050565b6000819050919050565b610ebc81610ea9565b82525050565b6000602082019050610ed76000830184610eb3565b92915050565b610ee681610ea9565b8114610ef157600080fd5b50565b600081359050610f0381610edd565b92915050565b600060208284031215610f1f57610f1e610def565b5b6000610f2d84828501610ef4565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000610fa3602983610f36565b9150610fae82610f47565b604082019050919050565b60006020820190508181036000830152610fd281610f96565b9050919050565b600081519050610fe881610edd565b92915050565b60006020828403121561100457611003610def565b5b600061101284828501610fd9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061105582610ea9565b915061106083610ea9565b925082820261106e81610ea9565b915082820484148315176110855761108461101b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110c682610ea9565b91506110d183610ea9565b9250826110e1576110e061108c565b5b828204905092915050565b60006110f782610ea9565b915061110283610ea9565b925082820190508082111561111a5761111961101b565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611156602083610f36565b915061116182611120565b602082019050919050565b6000602082019050818103600083015261118581611149565b9050919050565b60006040820190506111a16000830185610e7f565b6111ae6020830184610eb3565b9392505050565b60008115159050919050565b6111ca816111b5565b81146111d557600080fd5b50565b6000815190506111e7816111c1565b92915050565b60006020828403121561120357611202610def565b5b6000611211848285016111d8565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611276602a83610f36565b91506112818261121a565b604082019050919050565b600060208201905081810360008301526112a581611269565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611308602683610f36565b9150611313826112ac565b604082019050919050565b60006020820190508181036000830152611337816112fb565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611372578082015181840152602081019050611357565b60008484015250505050565b60006113898261133e565b6113938185611349565b93506113a3818560208601611354565b80840191505092915050565b60006113bb828461137e565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006113fc601d83610f36565b9150611407826113c6565b602082019050919050565b6000602082019050818103600083015261142b816113ef565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b600061145982611432565b6114638185610f36565b9350611473818560208601611354565b61147c8161143d565b840191505092915050565b600060208201905081810360008301526114a1818461144e565b90509291505056fea2646970667358221220bd94965dd8779c9c981564d49f655be2ba1a169435fd4cfa2c51ba5f9edf757e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9752B3B2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9752B3B2 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x979E9056 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xE7FCD45D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF6151089 EQ PUSH2 0x1A8 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1F068108 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8F88F261 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0x2A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x2BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13C PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xF09 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH32 0x842090F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD19529020FD81D84BEEAE5290E80CEF2820B494E9AEDF821B3C45B8110D7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x2B9 PUSH1 0x0 PUSH2 0xA9B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 PUSH2 0xACC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E6 PUSH2 0x561 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP2 PUSH2 0xA9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x379 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x842090F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x203661C8635F7AFB5F15D76E6B159110290D075AD62B4EE9FF9A7AB94187D4BD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x46E PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x842090F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x170B0500CCF8A13146ECD9838C59849129B54BEDA77DADBE500B8817CDC8D368 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x593 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xC830261600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH32 0x3D5A337607048974766EC58E2109261B4871329988D9615E7051BAE635C38A60 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x60C PUSH2 0xA1D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x66C PUSH2 0x348 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x6B9 PUSH2 0xA1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x736 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75A SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST SWAP1 POP PUSH2 0x7C9 PUSH32 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP5 PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH2 0x822 PUSH32 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP5 PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST SWAP1 POP PUSH2 0x90D PUSH32 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xAD4 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 TIMESTAMP PUSH32 0x50EFD2F2F250964DA5961D710F9E330EA396FAEC8EF1E3DAD48FF354A629D382 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA25 PUSH2 0xACC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA43 PUSH2 0x348 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA90 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xAC9 DUP2 PUSH2 0x959 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB55 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAF3 SWAP3 SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xB5A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC22 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0xBDE JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xBDD SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST JUMPDEST PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC14 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC31 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xC3A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC76 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xCFB DUP8 DUP4 DUP4 DUP8 PUSH2 0xD07 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0xD61 JUMPI PUSH2 0xD21 DUP6 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD57 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xD73 DUP4 DUP4 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xDB2 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE6 SWAP2 SWAP1 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F DUP3 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0xE14 JUMP JUMPDEST DUP2 EQ PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4C DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE68 JUMPI PUSH2 0xE67 PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE76 DUP5 DUP3 DUP6 ADD PUSH2 0xE3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE88 DUP2 PUSH2 0xE14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBC DUP2 PUSH2 0xEA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0xEA9 JUMP JUMPDEST DUP2 EQ PUSH2 0xEF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF03 DUP2 PUSH2 0xEDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2D DUP5 DUP3 DUP6 ADD PUSH2 0xEF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6577206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA3 PUSH1 0x29 DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAE DUP3 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD2 DUP2 PUSH2 0xF96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE8 DUP2 PUSH2 0xEDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1003 PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1012 DUP5 DUP3 DUP6 ADD PUSH2 0xFD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1055 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1060 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x106E DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1085 JUMPI PUSH2 0x1084 PUSH2 0x101B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10C6 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x10D1 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x10E1 JUMPI PUSH2 0x10E0 PUSH2 0x108C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F7 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1102 DUP4 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x111A JUMPI PUSH2 0x1119 PUSH2 0x101B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1156 PUSH1 0x20 DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1161 DUP3 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1185 DUP2 PUSH2 0x1149 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11A1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x11AE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x11B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11E7 DUP2 PUSH2 0x11C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0xDEF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1211 DUP5 DUP3 DUP6 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1276 PUSH1 0x2A DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1281 DUP3 PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12A5 DUP2 PUSH2 0x1269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1308 PUSH1 0x26 DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1313 DUP3 PUSH2 0x12AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1337 DUP2 PUSH2 0x12FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1389 DUP3 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x1393 DUP2 DUP6 PUSH2 0x1349 JUMP JUMPDEST SWAP4 POP PUSH2 0x13A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1354 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BB DUP3 DUP5 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13FC PUSH1 0x1D DUP4 PUSH2 0xF36 JUMP JUMPDEST SWAP2 POP PUSH2 0x1407 DUP3 PUSH2 0x13C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142B DUP2 PUSH2 0x13EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1459 DUP3 PUSH2 0x1432 JUMP JUMPDEST PUSH2 0x1463 DUP2 DUP6 PUSH2 0xF36 JUMP JUMPDEST SWAP4 POP PUSH2 0x1473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x143D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A1 DUP2 DUP5 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SWAP5 SWAP7 0x5D 0xD8 PUSH24 0x9C9C981564D49F655BE2BA1A169435FD4CFA2C51BA5F9EDF PUSH22 0x7E64736F6C6343000812003300000000000000000000 ",
							"sourceMap": "412:3450:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:0;;;:::i;:::-;;1734:212:1;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3638:221:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3014:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1098:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:99:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2717:203:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1139:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2055:487:8;;;:::i;:::-;;3326:221;1094:13:0;:11;:13::i;:::-;3424:3:8::1;3404:24;;:8;:24;;::::0;3401:56:::1;;3437:20;;;;;;;;;;;;;;3401:56;3480:8;3468;;:21;;;;;;;;;;;;;;;;;;3530:8;3507:32;;;;;;;;;;;;3326:221:::0;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1734:212:1:-;1786:14;1803:12;:10;:12::i;:::-;1786:29;;1851:6;1833:24;;:14;:12;:14::i;:::-;:24;;;1825:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1913:26;1932:6;1913:18;:26::i;:::-;1776:170;1734:212::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3638:221:8:-;1094:13:0;:11;:13::i;:::-;3736:3:8::1;3716:24;;:8;:24;;::::0;3713:56:::1;;3749:20;;;;;;;;;;;;;;3713:56;3792:8;3780;;:21;;;;;;;;;;;;;;;;;;3842:8;3819:32;;;;;;;;;;;;3638:221:::0;:::o;3014:217::-;1094:13:0;:11;:13::i;:::-;3111:3:8::1;3091:24;;:8;:24;;::::0;3088:56:::1;;3124:20;;;;;;;;;;;;;;3088:56;3165:8;3155:6;;:19;;;;;;;;;;;;;;;;;;3214:8;3192:31;;;;;;;;;;;;3014:217:::0;:::o;1098:26::-;;;;:::o;847:99:1:-;900:7;926:13;;;;;;;;;;;919:20;;847:99;:::o;2717:203:8:-;1094:13:0;:11;:13::i;:::-;2802:1:8::1;2792:6;:11:::0;2789:42:::1;;2812:19;;;;;;;;;;;;;;2789:42;2860:6;2844:13;:22;;;;2905:6;2884:28;;;;;;;;;;2717:203:::0;:::o;1139:178:1:-;1094:13:0;:11;:13::i;:::-;1244:8:1::1;1228:13;;:24;;;;;;;;;;;;;;;;;;1301:8;1267:43;;1292:7;:5;:7::i;:::-;1267:43;;;;;;;;;;;;1139:178:::0;:::o;2055:487:8:-;1094:13:0;:11;:13::i;:::-;2106:14:8::1;2167:13;;2159:3;2124:7;:17;;;2150:4;2124:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;2123:57;;;;:::i;:::-;2106:74;;2193:53;2216:7;2225:8;;;;;;;;;;;2244:1;2235:6;:10;;;;:::i;:::-;2193:22;:53::i;:::-;2257;2280:7;2289:8;;;;;;;;;;;2308:1;2299:6;:10;;;;:::i;:::-;2257:22;:53::i;:::-;2323:17;2343:7;:17;;;2369:4;2343:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2323:52;;2388:50;2411:7;2420:6;;;;;;;;;;;2428:9;2388:22;:50::i;:::-;2464:9;2449:11;;:24;;;;;;;:::i;:::-;;;;;;;;2524:9;2516:6;2499:15;2491:43;;;;;;;;;;2095:447;;2055:487::o:0;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;1501:153:1:-;1590:13;;1583:20;;;;;;;;;;;1613:34;1638:8;1613:24;:34::i;:::-;1501:153;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;941:175:5:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:6:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:169::-;2655:11;2689:6;2684:3;2677:19;2729:4;2724:3;2720:14;2705:29;;2571:169;;;;:::o;2746:228::-;2886:34;2882:1;2874:6;2870:14;2863:58;2955:11;2950:2;2942:6;2938:15;2931:36;2746:228;:::o;2980:366::-;3122:3;3143:67;3207:2;3202:3;3143:67;:::i;:::-;3136:74;;3219:93;3308:3;3219:93;:::i;:::-;3337:2;3332:3;3328:12;3321:19;;2980:366;;;:::o;3352:419::-;3518:4;3556:2;3545:9;3541:18;3533:26;;3605:9;3599:4;3595:20;3591:1;3580:9;3576:17;3569:47;3633:131;3759:4;3633:131;:::i;:::-;3625:139;;3352:419;;;:::o;3777:143::-;3834:5;3865:6;3859:13;3850:22;;3881:33;3908:5;3881:33;:::i;:::-;3777:143;;;;:::o;3926:351::-;3996:6;4045:2;4033:9;4024:7;4020:23;4016:32;4013:119;;;4051:79;;:::i;:::-;4013:119;4171:1;4196:64;4252:7;4243:6;4232:9;4228:22;4196:64;:::i;:::-;4186:74;;4142:128;3926:351;;;;:::o;4283:180::-;4331:77;4328:1;4321:88;4428:4;4425:1;4418:15;4452:4;4449:1;4442:15;4469:410;4509:7;4532:20;4550:1;4532:20;:::i;:::-;4527:25;;4566:20;4584:1;4566:20;:::i;:::-;4561:25;;4621:1;4618;4614:9;4643:30;4661:11;4643:30;:::i;:::-;4632:41;;4822:1;4813:7;4809:15;4806:1;4803:22;4783:1;4776:9;4756:83;4733:139;;4852:18;;:::i;:::-;4733:139;4517:362;4469:410;;;;:::o;4885:180::-;4933:77;4930:1;4923:88;5030:4;5027:1;5020:15;5054:4;5051:1;5044:15;5071:185;5111:1;5128:20;5146:1;5128:20;:::i;:::-;5123:25;;5162:20;5180:1;5162:20;:::i;:::-;5157:25;;5201:1;5191:35;;5206:18;;:::i;:::-;5191:35;5248:1;5245;5241:9;5236:14;;5071:185;;;;:::o;5262:191::-;5302:3;5321:20;5339:1;5321:20;:::i;:::-;5316:25;;5355:20;5373:1;5355:20;:::i;:::-;5350:25;;5398:1;5395;5391:9;5384:16;;5419:3;5416:1;5413:10;5410:36;;;5426:18;;:::i;:::-;5410:36;5262:191;;;;:::o;5459:182::-;5599:34;5595:1;5587:6;5583:14;5576:58;5459:182;:::o;5647:366::-;5789:3;5810:67;5874:2;5869:3;5810:67;:::i;:::-;5803:74;;5886:93;5975:3;5886:93;:::i;:::-;6004:2;5999:3;5995:12;5988:19;;5647:366;;;:::o;6019:419::-;6185:4;6223:2;6212:9;6208:18;6200:26;;6272:9;6266:4;6262:20;6258:1;6247:9;6243:17;6236:47;6300:131;6426:4;6300:131;:::i;:::-;6292:139;;6019:419;;;:::o;6444:332::-;6565:4;6603:2;6592:9;6588:18;6580:26;;6616:71;6684:1;6673:9;6669:17;6660:6;6616:71;:::i;:::-;6697:72;6765:2;6754:9;6750:18;6741:6;6697:72;:::i;:::-;6444:332;;;;;:::o;6782:90::-;6816:7;6859:5;6852:13;6845:21;6834:32;;6782:90;;;:::o;6878:116::-;6948:21;6963:5;6948:21;:::i;:::-;6941:5;6938:32;6928:60;;6984:1;6981;6974:12;6928:60;6878:116;:::o;7000:137::-;7054:5;7085:6;7079:13;7070:22;;7101:30;7125:5;7101:30;:::i;:::-;7000:137;;;;:::o;7143:345::-;7210:6;7259:2;7247:9;7238:7;7234:23;7230:32;7227:119;;;7265:79;;:::i;:::-;7227:119;7385:1;7410:61;7463:7;7454:6;7443:9;7439:22;7410:61;:::i;:::-;7400:71;;7356:125;7143:345;;;;:::o;7494:229::-;7634:34;7630:1;7622:6;7618:14;7611:58;7703:12;7698:2;7690:6;7686:15;7679:37;7494:229;:::o;7729:366::-;7871:3;7892:67;7956:2;7951:3;7892:67;:::i;:::-;7885:74;;7968:93;8057:3;7968:93;:::i;:::-;8086:2;8081:3;8077:12;8070:19;;7729:366;;;:::o;8101:419::-;8267:4;8305:2;8294:9;8290:18;8282:26;;8354:9;8348:4;8344:20;8340:1;8329:9;8325:17;8318:47;8382:131;8508:4;8382:131;:::i;:::-;8374:139;;8101:419;;;:::o;8526:225::-;8666:34;8662:1;8654:6;8650:14;8643:58;8735:8;8730:2;8722:6;8718:15;8711:33;8526:225;:::o;8757:366::-;8899:3;8920:67;8984:2;8979:3;8920:67;:::i;:::-;8913:74;;8996:93;9085:3;8996:93;:::i;:::-;9114:2;9109:3;9105:12;9098:19;;8757:366;;;:::o;9129:419::-;9295:4;9333:2;9322:9;9318:18;9310:26;;9382:9;9376:4;9372:20;9368:1;9357:9;9353:17;9346:47;9410:131;9536:4;9410:131;:::i;:::-;9402:139;;9129:419;;;:::o;9554:98::-;9605:6;9639:5;9633:12;9623:22;;9554:98;;;:::o;9658:147::-;9759:11;9796:3;9781:18;;9658:147;;;;:::o;9811:246::-;9892:1;9902:113;9916:6;9913:1;9910:13;9902:113;;;10001:1;9996:3;9992:11;9986:18;9982:1;9977:3;9973:11;9966:39;9938:2;9935:1;9931:10;9926:15;;9902:113;;;10049:1;10040:6;10035:3;10031:16;10024:27;9873:184;9811:246;;;:::o;10063:386::-;10167:3;10195:38;10227:5;10195:38;:::i;:::-;10249:88;10330:6;10325:3;10249:88;:::i;:::-;10242:95;;10346:65;10404:6;10399:3;10392:4;10385:5;10381:16;10346:65;:::i;:::-;10436:6;10431:3;10427:16;10420:23;;10171:278;10063:386;;;;:::o;10455:271::-;10585:3;10607:93;10696:3;10687:6;10607:93;:::i;:::-;10600:100;;10717:3;10710:10;;10455:271;;;;:::o;10732:179::-;10872:31;10868:1;10860:6;10856:14;10849:55;10732:179;:::o;10917:366::-;11059:3;11080:67;11144:2;11139:3;11080:67;:::i;:::-;11073:74;;11156:93;11245:3;11156:93;:::i;:::-;11274:2;11269:3;11265:12;11258:19;;10917:366;;;:::o;11289:419::-;11455:4;11493:2;11482:9;11478:18;11470:26;;11542:9;11536:4;11532:20;11528:1;11517:9;11513:17;11506:47;11570:131;11696:4;11570:131;:::i;:::-;11562:139;;11289:419;;;:::o;11714:99::-;11766:6;11800:5;11794:12;11784:22;;11714:99;;;:::o;11819:102::-;11860:6;11911:2;11907:7;11902:2;11895:5;11891:14;11887:28;11877:38;;11819:102;;;:::o;11927:377::-;12015:3;12043:39;12076:5;12043:39;:::i;:::-;12098:71;12162:6;12157:3;12098:71;:::i;:::-;12091:78;;12178:65;12236:6;12231:3;12224:4;12217:5;12213:16;12178:65;:::i;:::-;12268:29;12290:6;12268:29;:::i;:::-;12263:3;12259:39;12252:46;;12019:285;11927:377;;;;:::o;12310:313::-;12423:4;12461:2;12450:9;12446:18;12438:26;;12510:9;12504:4;12500:20;12496:1;12485:9;12481:17;12474:47;12538:78;12611:4;12602:6;12538:78;:::i;:::-;12530:86;;12310:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1068600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "54703",
								"owner()": "2589",
								"pendingOwner()": "2566",
								"renounceOwnership()": "54692",
								"setBribingWallet(address)": "28182",
								"setEqualDaoWallet(address)": "28271",
								"setPantheonWallet(address)": "28183",
								"setProfitDivider(uint256)": "26028",
								"splitFees()": "infinite",
								"totalBribes()": "2451",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1732,
									"end": 1805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1789,
									"end": 1796,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1654,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1501,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1590,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1590,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1603,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1638,
									"end": 1646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551665"
								},
								{
									"begin": 1613,
									"end": 1637,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1647,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1613,
									"end": 1647,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1647,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1613,
									"end": 1647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1654,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "1129"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 3862,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd94965dd8779c9c981564d49f655be2ba1a169435fd4cfa2c51ba5f9edf757e64736f6c63430008120033",
									".code": [
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "9752B3B2"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "9752B3B2"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "979E9056"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "E30C3978"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "E7FCD45D"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "F6151089"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "1F068108"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "79BA5097"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "8F88F261"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 412,
											"end": 3862,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3326,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3326,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1734,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3638,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3638,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3014,
											"end": 3231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3014,
											"end": 3231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1098,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1098,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 847,
											"end": 946,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 847,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 847,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2717,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2717,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1139,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1139,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2055,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3401,
											"end": 3457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "842090F100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3401,
											"end": 3457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3489,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3538,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "CD19529020FD81D84BEEAE5290E80CEF2820B494E9AEDF821B3C45B8110D7DF"
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3507,
											"end": 3539,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1734,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1803,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1803,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1857,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1833,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1833,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1833,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1857,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1833,
											"end": 1857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1857,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1825,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1825,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1932,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1913,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1939,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1913,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3736,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3716,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3716,
											"end": 3724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3716,
											"end": 3740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3716,
											"end": 3740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3713,
											"end": 3769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "842090F100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3769,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3713,
											"end": 3769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3780,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3801,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3850,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "203661C8635F7AFB5F15D76E6B159110290D075AD62B4EE9FF9A7AB94187D4BD"
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3851,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3115,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3088,
											"end": 3144,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "842090F100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3088,
											"end": 3144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3155,
											"end": 3161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "170B0500CCF8A13146ECD9838C59849129B54BEDA77DADBE500B8817CDC8D368"
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3223,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3014,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1098,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 847,
											"end": 946,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 847,
											"end": 946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 926,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 926,
											"end": 939,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 919,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2789,
											"end": 2831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C830261600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2812,
											"end": 2831,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2789,
											"end": 2831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2844,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2866,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2905,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3D5A337607048974766EC58E2109261B4871329988D9615E7051BAE635C38A60"
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 2912,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1252,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1252,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1309,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1292,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1292,
											"end": 1299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1292,
											"end": 1299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1310,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2055,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2106,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2167,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2124,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1129"
										},
										{
											"begin": 2124,
											"end": 2141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2124,
											"end": 2141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2150,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2124,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2124,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2124,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2124,
											"end": 2162,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2162,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2124,
											"end": 2162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2124,
											"end": 2162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2123,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2123,
											"end": 2180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2123,
											"end": 2180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2106,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2106,
											"end": 2180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2216,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1129"
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2225,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2235,
											"end": 2241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2235,
											"end": 2245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2193,
											"end": 2246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2193,
											"end": 2246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2280,
											"end": 2287,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1129"
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2299,
											"end": 2305,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2299,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2299,
											"end": 2309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2299,
											"end": 2309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2257,
											"end": 2310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2257,
											"end": 2310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 2257,
											"end": 2310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2350,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1129"
										},
										{
											"begin": 2343,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2369,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2343,
											"end": 2375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2343,
											"end": 2375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2343,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1129"
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2420,
											"end": 2426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2388,
											"end": 2438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2388,
											"end": 2438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2449,
											"end": 2460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2449,
											"end": 2473,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2449,
											"end": 2473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2524,
											"end": 2533,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2499,
											"end": 2514,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "50EFD2F2F250964DA5961D710F9E330EA396FAEC8EF1E3DAD48FF354A629D382"
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2534,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1501,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1501,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1613,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1647,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1613,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1528,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2974,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2746,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2886,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C6532537465703A2063616C6C6572206973206E6F742074686520"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2955,
											"end": 2966,
											"name": "PUSH",
											"source": 9,
											"value": "6E6577206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2950,
											"end": 2952,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2931,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3346,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2980,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3207,
											"end": 3209,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3143,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3210,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3143,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3308,
											"end": 3311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3219,
											"end": 3312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3219,
											"end": 3312,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3219,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3339,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3321,
											"end": 3340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3321,
											"end": 3340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3346,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2980,
											"end": 3346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3771,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3352,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3559,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3533,
											"end": 3559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3605,
											"end": 3614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3615,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3589,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3759,
											"end": 3763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3633,
											"end": 3764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3764,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3633,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3771,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3777,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 3839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3872,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3908,
											"end": 3913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3881,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3914,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3881,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3920,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3920,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3777,
											"end": 3920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4048,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 4051,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4252,
											"end": 4259,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4196,
											"end": 4260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4196,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4142,
											"end": 4270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 4277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4283,
											"end": 4463,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4283,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4331,
											"end": 4408,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4409,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4449,
											"end": 4450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4879,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4469,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4532,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4532,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4527,
											"end": 4552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4566,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4586,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 4566,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4586,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4621,
											"end": 4622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4643,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4661,
											"end": 4672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4643,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4643,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4643,
											"end": 4673,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4643,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4824,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4825,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4839,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4733,
											"end": 4872,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4852,
											"end": 4870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4872,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4733,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4879,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4879,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4469,
											"end": 4879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4885,
											"end": 5065,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4885,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4933,
											"end": 5010,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4930,
											"end": 4931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 5011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5034,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 5027,
											"end": 5028,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5020,
											"end": 5035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5059,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5256,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5071,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5111,
											"end": 5112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5128,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 5148,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5128,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5123,
											"end": 5148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5162,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5182,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5191,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5191,
											"end": 5226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 5206,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5191,
											"end": 5226,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5191,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5250,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5256,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5453,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5262,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5302,
											"end": 5305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5321,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 5321,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5373,
											"end": 5374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5355,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5413,
											"end": 5423,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5410,
											"end": 5446,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5410,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5410,
											"end": 5446,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5426,
											"end": 5444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5410,
											"end": 5446,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5410,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5453,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5453,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5641,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5459,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5599,
											"end": 5633,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5576,
											"end": 5634,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 6013,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 5647,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5874,
											"end": 5876,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5810,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5810,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5810,
											"end": 5877,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5810,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5803,
											"end": 5877,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5803,
											"end": 5877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5975,
											"end": 5978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5886,
											"end": 5979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5979,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5886,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5995,
											"end": 6007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 6013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 6013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 6013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6438,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6019,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6185,
											"end": 6189,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6225,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6200,
											"end": 6226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6262,
											"end": 6282,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6256,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6426,
											"end": 6430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 6300,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6300,
											"end": 6431,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6300,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6438,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6569,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 6601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6588,
											"end": 6606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6580,
											"end": 6606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6616,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 6684,
											"end": 6685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6660,
											"end": 6666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6616,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6616,
											"end": 6687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6616,
											"end": 6687,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 6616,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6765,
											"end": 6767,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6754,
											"end": 6763,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6697,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6697,
											"end": 6769,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6697,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6872,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6782,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 6823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6865,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6845,
											"end": 6866,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6834,
											"end": 6866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6834,
											"end": 6866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6994,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 6878,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6948,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 6946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6938,
											"end": 6970,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 6986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6928,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7137,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7000,
											"end": 7137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7054,
											"end": 7059,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7079,
											"end": 7092,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7101,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 7101,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7137,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7488,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 7143,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7216,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7259,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7247,
											"end": 7256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7238,
											"end": 7245,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7257,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 7227,
											"end": 7346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7265,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7265,
											"end": 7344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7344,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7265,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7227,
											"end": 7346,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 7227,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7385,
											"end": 7386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7463,
											"end": 7470,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7452,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7439,
											"end": 7461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7410,
											"end": 7471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7471,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7410,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7400,
											"end": 7471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7400,
											"end": 7471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7356,
											"end": 7481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7488,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7488,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7488,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7723,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7494,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7668,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 7630,
											"end": 7631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7669,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 7698,
											"end": 7700,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 7701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7494,
											"end": 7723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 8095,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 7729,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7871,
											"end": 7874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 7951,
											"end": 7954,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7892,
											"end": 7959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7892,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8057,
											"end": 8060,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7968,
											"end": 8061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 8061,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7968,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8088,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8081,
											"end": 8084,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8077,
											"end": 8089,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8070,
											"end": 8089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8070,
											"end": 8089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 8095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 8095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 8095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 8095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8520,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 8101,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8354,
											"end": 8363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8364,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8338,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8318,
											"end": 8365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8508,
											"end": 8512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 8382,
											"end": 8513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8513,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8382,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8751,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8526,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 8700,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8664,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8643,
											"end": 8701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8735,
											"end": 8743,
											"name": "PUSH",
											"source": 9,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8899,
											"end": 8902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8979,
											"end": 8982,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 8920,
											"end": 8987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8987,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8913,
											"end": 8987,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 9085,
											"end": 9088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8996,
											"end": 9089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9114,
											"end": 9116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 9112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9105,
											"end": 9117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9098,
											"end": 9117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9098,
											"end": 9117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9322,
											"end": 9331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9318,
											"end": 9336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9310,
											"end": 9336,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9310,
											"end": 9336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9376,
											"end": 9380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9372,
											"end": 9392,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9368,
											"end": 9369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9366,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 9536,
											"end": 9540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9410,
											"end": 9541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9652,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 9554,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9605,
											"end": 9611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9639,
											"end": 9644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9633,
											"end": 9645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9805,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9658,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9759,
											"end": 9770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9796,
											"end": 9799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9805,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9805,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9658,
											"end": 9805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 10057,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9811,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9892,
											"end": 9893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 9922,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 9914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9923,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9996,
											"end": 9999,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9992,
											"end": 10003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 9983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 9980,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9973,
											"end": 9984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9966,
											"end": 10005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9938,
											"end": 9940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9935,
											"end": 9936,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 9902,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10049,
											"end": 10050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10035,
											"end": 10038,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10031,
											"end": 10047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9873,
											"end": 10057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 10057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 10057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 10057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9811,
											"end": 10057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10449,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 10063,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10195,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 10227,
											"end": 10232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10195,
											"end": 10233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10233,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 10195,
											"end": 10233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 10330,
											"end": 10336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10328,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10249,
											"end": 10337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10337,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 10249,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10337,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 10404,
											"end": 10410,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10399,
											"end": 10402,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10396,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10385,
											"end": 10390,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10381,
											"end": 10397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10346,
											"end": 10411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10411,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 10346,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10436,
											"end": 10442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10434,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10427,
											"end": 10443,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10063,
											"end": 10449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10726,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 10455,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10585,
											"end": 10588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10607,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 10607,
											"end": 10700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10607,
											"end": 10700,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 10607,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10600,
											"end": 10700,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10600,
											"end": 10700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10717,
											"end": 10720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10710,
											"end": 10720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10710,
											"end": 10720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10726,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10911,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 10732,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10872,
											"end": 10903,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10868,
											"end": 10869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 10870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10849,
											"end": 10904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10732,
											"end": 10911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11283,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10917,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 11139,
											"end": 11142,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 11080,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11080,
											"end": 11147,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 11080,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11073,
											"end": 11147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11073,
											"end": 11147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11156,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 11245,
											"end": 11248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11156,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 11156,
											"end": 11249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11156,
											"end": 11249,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 11156,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11274,
											"end": 11276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11265,
											"end": 11277,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11258,
											"end": 11277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10917,
											"end": 11283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11708,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 11289,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11455,
											"end": 11459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11493,
											"end": 11495,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11482,
											"end": 11491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11470,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11542,
											"end": 11551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11532,
											"end": 11552,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11528,
											"end": 11529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11517,
											"end": 11526,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11513,
											"end": 11530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11506,
											"end": 11553,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 11696,
											"end": 11700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 11570,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11570,
											"end": 11701,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 11570,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11813,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 11714,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11766,
											"end": 11772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11800,
											"end": 11805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11794,
											"end": 11806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 11806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 11806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11813,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11921,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 11819,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11913,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11907,
											"end": 11914,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11902,
											"end": 11904,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11895,
											"end": 11900,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11891,
											"end": 11905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11887,
											"end": 11915,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11819,
											"end": 11921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11927,
											"end": 12304,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 11927,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12015,
											"end": 12018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12043,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 12076,
											"end": 12081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12043,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 12043,
											"end": 12082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12043,
											"end": 12082,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 12043,
											"end": 12082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 12162,
											"end": 12168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12157,
											"end": 12160,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12098,
											"end": 12169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12169,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 12098,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12091,
											"end": 12169,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12091,
											"end": 12169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 12236,
											"end": 12242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12231,
											"end": 12234,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12228,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12217,
											"end": 12222,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12213,
											"end": 12229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12243,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 12178,
											"end": 12243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12243,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 12178,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 12290,
											"end": 12296,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 12268,
											"end": 12297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12268,
											"end": 12297,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 12268,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12263,
											"end": 12266,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12259,
											"end": 12298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12298,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12252,
											"end": 12298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12019,
											"end": 12304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11927,
											"end": 12304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11927,
											"end": 12304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11927,
											"end": 12304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11927,
											"end": 12304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11927,
											"end": 12304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12310,
											"end": 12623,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12310,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12461,
											"end": 12463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12438,
											"end": 12464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12438,
											"end": 12464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12510,
											"end": 12519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12508,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12496,
											"end": 12497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12481,
											"end": 12498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12474,
											"end": 12521,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 12611,
											"end": 12615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12602,
											"end": 12608,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 12538,
											"end": 12616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12616,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 12538,
											"end": 12616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12310,
											"end": 12623,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12310,
											"end": 12623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12310,
											"end": 12623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12310,
											"end": 12623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12310,
											"end": 12623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@v4.9.3/access/Ownable.sol",
								"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol",
								"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@v4.9.3/utils/Address.sol",
								"@openzeppelin/contracts@v4.9.3/utils/Context.sol",
								"FeeSplitter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"setBribingWallet(address)": "9752b3b2",
							"setEqualDaoWallet(address)": "8f88f261",
							"setPantheonWallet(address)": "1f068108",
							"setProfitDivider(uint256)": "e7fcd45d",
							"splitFees()": "f6151089",
							"totalBribes()": "979e9056",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CantSetAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroProfitDivider\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"BribingAddress\",\"type\":\"address\"}],\"name\":\"BribingAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"EqualDaoAddress\",\"type\":\"address\"}],\"name\":\"EqualDaoAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"AmountSentToPantheonAndEqualDao\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"AmountSentToBribing\",\"type\":\"uint256\"}],\"name\":\"FeeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"PantheonAddress\",\"type\":\"address\"}],\"name\":\"PantheonAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ProfitDivider\",\"type\":\"uint256\"}],\"name\":\"ProfitDividerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setBribingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setEqualDaoWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setPantheonWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setProfitDivider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBribes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CantSetAddressZero()\":[{\"custom:section\":\"** ERRORS **\"}]},\"events\":{\"FeeSent(uint256,uint256,uint256)\":{\"custom:section\":\"** EVENTS **\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"custom:section\":\"** CONSTRUCTOR **\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"}},\"stateVariables\":{\"BRIBES\":{\"custom:section\":\"** PRIVATE VARIABLES **\"},\"_PTOKEN\":{\"custom:section\":\"** IMMUTABLES **\"},\"totalBribes\":{\"custom:section\":\"** PUBLIC VARIABLES **\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBribingWallet(address)\":{\"notice\":\"this function lets the owner set the Bribing Wallet\"},\"setEqualDaoWallet(address)\":{\"notice\":\"this function lets the owner set the =DAO Wallet\"},\"setPantheonWallet(address)\":{\"notice\":\"this function lets the owner set the Pantheon Wallet\"},\"setProfitDivider(uint256)\":{\"notice\":\"this function lets the owner set the ProfitDivider variable that is used to calculate the amount sent to the Pantheon & =DAO wallets\"},\"splitFees()\":{\"notice\":\"this function splits the revenue generated by pTOKEN.sol into the Bribing Wallet and the Pantheon & =DAO wallets\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FeeSplitter.sol\":\"FeeSplitter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@v4.9.3/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol\":{\"keccak256\":\"0xde231558366826d7cb61725af8147965a61c53b77a352cc8c9af38fc5a92ac3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd55624076bf61d44af5ff351919e32dda748567acfbdd6ba3d6c7be61c758e\",\"dweb:/ipfs/QmSki4dTrf4GPm7MTpG3fk8mC7rnjwd2zMomLp6jLuF63Q\"]},\"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts@v4.9.3/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@v4.9.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"FeeSplitter.sol\":{\"keccak256\":\"0x1a616a764e386fa107288504d81b5ccc75019d29fcc0124370fb18ae5f7fc0f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4ead3936af528c77506464ff7bb663f923feb938c603e37ceb86bcb28fd2762\",\"dweb:/ipfs/QmUakxwArBLGA7iNeuSTPLLn8xQZJfjaNe6b7aEhsUP8R6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 120,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 206,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1132,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "BRIBES",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1134,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "PANTHEON",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1136,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "EQUALDAO",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1138,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "ProfitDivider",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1141,
								"contract": "FeeSplitter.sol:FeeSplitter",
								"label": "totalBribes",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setBribingWallet(address)": {
								"notice": "this function lets the owner set the Bribing Wallet"
							},
							"setEqualDaoWallet(address)": {
								"notice": "this function lets the owner set the =DAO Wallet"
							},
							"setPantheonWallet(address)": {
								"notice": "this function lets the owner set the Pantheon Wallet"
							},
							"setProfitDivider(uint256)": {
								"notice": "this function lets the owner set the ProfitDivider variable that is used to calculate the amount sent to the Pantheon & =DAO wallets"
							},
							"splitFees()": {
								"notice": "this function splits the revenue generated by pTOKEN.sol into the Bribing Wallet and the Pantheon & =DAO wallets"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@v4.9.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1102
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1103,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1102,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1102
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol",
					"exportedSymbols": {
						"Context": [
							1102
						],
						"Ownable": [
							112
						],
						"Ownable2Step": [
							195
						]
					},
					"id": 196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/access/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 113,
							"src": "132:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Ownable",
										"nameLocations": [
											"633:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "633:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "633:7:1"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "157:441:1",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195,
								112,
								1102
							],
							"name": "Ownable2Step",
							"nameLocation": "617:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "663:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 195,
									"src": "647:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 119,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 126,
									"name": "OwnershipTransferStarted",
									"nameLocation": "689:24:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "730:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "714:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "761:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "745:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:57:1"
									},
									"src": "683:88:1"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "909:37:1",
										"statements": [
											{
												"expression": {
													"id": 132,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "926:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 131,
												"id": 133,
												"nodeType": "Return",
												"src": "919:20:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "777:65:1",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "856:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "868:2:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "900:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:9:1"
									},
									"scope": 195,
									"src": "847:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										91
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1218:99:1",
										"statements": [
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1228:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "1244:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1228:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1228:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 149,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "1292:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1292:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 151,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1301:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1267:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1262:48:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "952:182:1",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"1208:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1208:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1208:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1148:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1199:8:1"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1174:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1166:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:18:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:0:1"
									},
									"scope": 195,
									"src": "1139:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										111
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1573:81:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1583:20:1",
													"subExpression": {
														"id": 162,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1590:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1583:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1638:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 165,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1613:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$195_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1619:18:1",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "1613:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1613:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1613:34:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1323:173:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1510:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1564:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1529:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:18:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1573:0:1"
									},
									"scope": 195,
									"src": "1501:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1776:170:1",
										"statements": [
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1794:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "1786:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1786:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 178,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "1803:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1786:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "pendingOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "1833:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1833:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 184,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "1851:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1833:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206e6577206f776e6572",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1859:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																"typeString": "literal_string \"Ownable2Step: caller is not the new owner\""
															},
															"value": "Ownable2Step: caller is not the new owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_225559eb8402045bea7ff07c35d0ad8c0547830223ac1c21d44fb948d6896ebc",
																"typeString": "literal_string \"Ownable2Step: caller is not the new owner\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1825:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1825:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1825:78:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1932:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															172
														],
														"referencedDeclaration": 172,
														"src": "1913:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1913:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "1913:26:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1660:69:1",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1743:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1758:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1776:0:1"
									},
									"scope": 195,
									"src": "1734:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 196,
							"src": "599:1349:1",
							"usedErrors": []
						}
					],
					"src": "107:1842:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							260
						]
					},
					"id": 261,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 260,
							"linearizedBaseContracts": [
								260
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 201,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 200,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 204,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 206,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 260,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 210,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 214,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 260,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 217,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 220,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 221,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 225,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 229,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 230,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 235,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 236,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 260,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 244,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 260,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 255,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 253,
												"id": 257,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 260,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 261,
							"src": "888:2238:2",
							"usedErrors": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 262,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 263,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 272,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 281,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 338,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 338,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 338,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 338,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 338,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 338,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "202:2534:3",
							"usedErrors": []
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1480:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1503:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1528:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1551:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1577:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 351,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1594:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:4"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:4"
									},
									"scope": 374,
									"src": "1455:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1959:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1997:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:4"
									},
									"scope": 374,
									"src": "1943:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2249:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:4"
									},
									"scope": 374,
									"src": "2198:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "629:1631:4",
							"usedErrors": []
						}
					],
					"src": "123:2138:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1080
						],
						"IERC20": [
							338
						],
						"IERC20Permit": [
							374
						],
						"SafeERC20": [
							750
						]
					},
					"id": 751,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 751,
							"sourceUnit": 339,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 751,
							"sourceUnit": 375,
							"src": "164:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 751,
							"sourceUnit": 1081,
							"src": "205:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 380,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 750,
							"linearizedBaseContracts": [
								750
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 383,
									"libraryName": {
										"id": 381,
										"name": "Address",
										"nameLocations": [
											"731:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "731:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:5",
									"typeName": {
										"id": 382,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1013:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "1043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 398,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "1073:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$338",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 305,
																		"src": "1073:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 401,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "1098:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "1102:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 396,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1023:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:5"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "963:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 386,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 385,
														"name": "IERC20",
														"nameLocations": [
															"963:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "963:6:5"
													},
													"referencedDeclaration": 338,
													"src": "963:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:5"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:5"
									},
									"scope": 750,
									"src": "941:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "1445:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1475:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 424,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1505:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$338",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 337,
																		"src": "1505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 427,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1534:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 428,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "1540:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "1544:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 422,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 420,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1455:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:5"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1381:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "1381:6:5"
													},
													"referencedDeclaration": 338,
													"src": "1381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1395:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1409:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "1421:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:5"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:5"
									},
									"scope": 750,
									"src": "1355:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "1894:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "2143:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 454,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$750",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$750",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 452,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 456,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 440,
																					"src": "2190:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 438,
																					"src": "2159:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$338",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 315,
																				"src": "2159:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 460,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "2314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 469,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "2344:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$338",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 325,
																		"src": "2344:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 472,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "2368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 473,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "2377:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "2294:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:5"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1839:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 436,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "1839:6:5"
													},
													"referencedDeclaration": 338,
													"src": "1839:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1870:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:5"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:5"
									},
									"scope": 750,
									"src": "1818:573:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "2668:194:5",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "2678:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 495,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$750",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$750",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 493,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "2732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 491,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2701:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 315,
														"src": "2701:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2770:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 504,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "2800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$338",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 325,
																		"src": "2800:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 507,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "2824:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 508,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "2833:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 509,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "2848:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 502,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 500,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "2750:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:5"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2613:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "2613:6:5"
													},
													"referencedDeclaration": 338,
													"src": "2613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2627:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2644:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:5"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:5"
									},
									"scope": 750,
									"src": "2582:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3139:321:5",
										"statements": [
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:5",
												"statements": [
													{
														"assignments": [
															527
														],
														"declarations": [
															{
																"constant": false,
																"id": 527,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "3173:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 526,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 536,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 532,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$750",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$750",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "3227:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "3196:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 315,
																"src": "3196:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 538,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "3257:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 539,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "3273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 537,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 543,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 545,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "3358:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 548,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "3388:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$338",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 325,
																				"src": "3388:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 551,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "3412:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 552,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "3421:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 553,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "3436:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 546,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 544,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "3338:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 557,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3084:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 517,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "3084:6:5"
													},
													"referencedDeclaration": 338,
													"src": "3084:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3098:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3115:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:5"
									},
									"scope": 750,
									"src": "3053:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "3856:333:5",
										"statements": [
											{
												"assignments": [
													572
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "3866:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 571,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 575,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "3917:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 325,
																"src": "3917:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 578,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "3941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "3950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 573,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:5"
											},
											{
												"condition": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 583,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "3996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$338",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 584,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "4003:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$338",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 582,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3972:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "3967:216:5",
												"trueBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "4018:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "4052:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$338",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 591,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 564,
																						"src": "4082:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$338",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 325,
																					"src": "4082:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 594,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 566,
																				"src": "4106:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 589,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$338",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 587,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "4032:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 600,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "4152:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$338",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 601,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "4159:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$338",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 599,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "4132:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 603,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3801:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 562,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "3801:6:5"
													},
													"referencedDeclaration": 338,
													"src": "3801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3815:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3832:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:5"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:5"
									},
									"scope": 750,
									"src": "3779:410:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "4556:257:5",
										"statements": [
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "4566:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4601:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 630,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$374",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "4588:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4630:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4653:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 642,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4663:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 643,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 644,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4669:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 635,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4617:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$374",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "4617:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:5"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "4681:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4715:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 649,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$374",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "4702:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "4739:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 656,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "4753:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:5"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4370:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$374",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 374,
														"src": "4370:12:5"
													},
													"referencedDeclaration": 374,
													"src": "4370:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$374",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4421:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4469:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4495:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 620,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4512:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 622,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4531:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:5"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:5"
									},
									"scope": 750,
									"src": "4341:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "5266:572:5",
										"statements": [
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "5615:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 673,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"id": 680,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5669:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 677,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "5649:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 675,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 840,
														"src": "5641:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "5728:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 691,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "5765:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 692,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 689,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:5"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5225:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 666,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "5225:6:5"
													},
													"referencedDeclaration": 338,
													"src": "5225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "5239:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:5"
									},
									"scope": 750,
									"src": "5196:642:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "6428:505:5",
										"statements": [
											{
												"assignments": [
													713,
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "6724:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "6738:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 714,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [
														{
															"id": 721,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "6785:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 718,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6773:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$338",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 724,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6819:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 725,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "6831:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 731,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "6868:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 732,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 734,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 729,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 737,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 743,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "6919:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$338",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$338",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 739,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "6892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1080_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 768,
															"src": "6892:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 711,
												"id": 747,
												"nodeType": "Return",
												"src": "6800:126:5"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "6372:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$338",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 703,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 338,
														"src": "6372:6:5"
													},
													"referencedDeclaration": 338,
													"src": "6372:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "6386:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:5"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "6422:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:5"
									},
									"scope": 750,
									"src": "6339:594:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 751,
							"src": "701:6234:5",
							"usedErrors": []
						}
					],
					"src": "115:6821:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@v4.9.3/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1080
						]
					},
					"id": 1081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 752,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 753,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "1478:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 761,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1702:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 760,
												"id": 766,
												"nodeType": "Return",
												"src": "1695:30:6"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1432:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:6"
									},
									"scope": 1080,
									"src": "1412:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2718:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 779,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1080",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1080",
																				"typeString": "library Address"
																			}
																		],
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 777,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 782,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "2761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:6"
											},
											{
												"assignments": [
													788,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "2813:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 787,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 795,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 789,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "2831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 791,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "2853:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:6"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2666:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:6"
									},
									"scope": 1080,
									"src": "2647:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "3790:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 812,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															860,
															904
														],
														"referencedDeclaration": 904,
														"src": "3807:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 811,
												"id": 818,
												"nodeType": "Return",
												"src": "3800:79:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "3723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:6"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:6"
									},
									"scope": 1080,
									"src": "3701:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "4255:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "4294:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "4302:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 836,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "4311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 832,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															860,
															904
														],
														"referencedDeclaration": 904,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 831,
												"id": 838,
												"nodeType": "Return",
												"src": "4265:59:6"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "4190:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 826,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:6"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "4241:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:6"
									},
									"scope": 1080,
									"src": "4108:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "4806:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "4853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "4859:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 852,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															860,
															904
														],
														"referencedDeclaration": 904,
														"src": "4823:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 851,
												"id": 858,
												"nodeType": "Return",
												"src": "4816:94:6"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4724:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4740:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 844,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4759:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:6"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4792:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:6"
									},
									"scope": 1080,
									"src": "4693:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "5344:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1080",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1080",
																				"typeString": "library Address"
																			}
																		],
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 875,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 880,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "5387:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:6"
											},
											{
												"assignments": [
													886,
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "5446:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 885,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "5460:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 887,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"arguments": [
														{
															"id": 893,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 889,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 891,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "5506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 899,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "5579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 900,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5591:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 896,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "5535:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 873,
												"id": 902,
												"nodeType": "Return",
												"src": "5528:76:6"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5229:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5279:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:6"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "5330:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:6"
									},
									"scope": 1080,
									"src": "5165:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "5888:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5924:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 914,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															950
														],
														"referencedDeclaration": 950,
														"src": "5905:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 913,
												"id": 919,
												"nodeType": "Return",
												"src": "5898:80:6"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "5874:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:6"
									},
									"scope": 1080,
									"src": "5788:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "6327:168:6",
										"statements": [
											{
												"assignments": [
													934,
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "6338:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 933,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "6352:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 935,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [
														{
															"id": 939,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 937,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 943,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "6446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "6454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 945,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6463:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 946,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "6475:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 942,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "6419:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 932,
												"id": 948,
												"nodeType": "Return",
												"src": "6412:76:6"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6206:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6230:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6257:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "6313:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 930,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:6"
									},
									"scope": 1080,
									"src": "6169:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "6771:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "6809:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6817:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 960,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															967,
															996
														],
														"referencedDeclaration": 996,
														"src": "6788:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 959,
												"id": 965,
												"nodeType": "Return",
												"src": "6781:84:6"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6720:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "6757:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:6"
									},
									"scope": 1080,
									"src": "6674:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "7213:170:6",
										"statements": [
											{
												"assignments": [
													980,
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "7224:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 979,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "7238:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 981,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"arguments": [
														{
															"id": 985,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "7285:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 983,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "7265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "7334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "7342:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 991,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "7351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 992,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "7363:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 988,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "7307:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 978,
												"id": 994,
												"nodeType": "Return",
												"src": "7300:76:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "7097:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "7121:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "7148:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "7199:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:6"
									},
									"scope": 1080,
									"src": "7058:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "7865:434:6",
										"statements": [
											{
												"condition": {
													"id": 1010,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1001,
													"src": "7879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "8235:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1028,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "8257:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "8269:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1027,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "8249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1031,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:6"
														}
													]
												},
												"id": 1033,
												"nodeType": "IfStatement",
												"src": "7875:418:6",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "7888:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1011,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "7906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1023,
															"nodeType": "IfStatement",
															"src": "7902:286:6",
															"trueBody": {
																"id": 1022,
																"nodeType": "Block",
																"src": "7930:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1017,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 999,
																							"src": "8132:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1016,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 768,
																						"src": "8121:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1018,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1015,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1021,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1024,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "8208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1009,
															"id": 1025,
															"nodeType": "Return",
															"src": "8201:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "7716:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "7740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "7762:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "7795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:6"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "7851:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:6"
									},
									"scope": 1080,
									"src": "7671:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "8680:135:6",
										"statements": [
											{
												"condition": {
													"id": 1047,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "8694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "8751:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1052,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "8773:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "8785:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1051,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "8765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:6"
														}
													]
												},
												"id": 1057,
												"nodeType": "IfStatement",
												"src": "8690:119:6",
												"trueBody": {
													"id": 1050,
													"nodeType": "Block",
													"src": "8703:42:6",
													"statements": [
														{
															"expression": {
																"id": 1048,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "8724:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1046,
															"id": 1049,
															"nodeType": "Return",
															"src": "8717:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "8555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "8577:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "8610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:6"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "8666:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:6"
									},
									"scope": 1080,
									"src": "8520:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "8904:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1066,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "8980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "9310:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1073,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "9331:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1072,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1075,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:6"
														}
													]
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "8976:379:6",
												"trueBody": {
													"id": 1071,
													"nodeType": "Block",
													"src": "9003:301:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1061,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1061,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:6",
																	"valueSize": 1
																}
															],
															"id": 1070,
															"nodeType": "InlineAssembly",
															"src": "9152:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "8838:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "8863:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:6"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:6"
									},
									"scope": 1080,
									"src": "8821:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1081,
							"src": "194:9169:6",
							"usedErrors": []
						}
					],
					"src": "101:9263:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@v4.9.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@v4.9.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1102
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1102,
							"linearizedBaseContracts": [
								1102
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1088,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1087,
												"id": 1090,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1102,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1097,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1099,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1102,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1103,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"FeeSplitter.sol": {
				"ast": {
					"absolutePath": "FeeSplitter.sol",
					"exportedSymbols": {
						"FeeSplitter": [
							1359
						],
						"IERC20": [
							338
						],
						"Ownable2Step": [
							195
						],
						"ReentrancyGuard": [
							260
						],
						"SafeERC20": [
							750
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol",
							"file": "@openzeppelin/contracts@v4.9.3/access/Ownable2Step.sol",
							"id": 1106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 196,
							"src": "60:84:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1105,
										"name": "Ownable2Step",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 195,
										"src": "68:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@v4.9.3/security/ReentrancyGuard.sol",
							"id": 1108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 261,
							"src": "146:92:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1107,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 260,
										"src": "154:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts@v4.9.3/token/ERC20/utils/SafeERC20.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 751,
							"src": "240:89:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1109,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 750,
										"src": "248:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@v4.9.3/token/ERC20/IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1360,
							"sourceUnit": 339,
							"src": "331:77:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 338,
										"src": "339:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "Ownable2Step",
										"nameLocations": [
											"436:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "436:12:8"
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "436:12:8"
								},
								{
									"baseName": {
										"id": 1115,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"450:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 260,
										"src": "450:15:8"
									},
									"id": 1116,
									"nodeType": "InheritanceSpecifier",
									"src": "450:15:8"
								}
							],
							"canonicalName": "FeeSplitter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1359,
							"linearizedBaseContracts": [
								1359,
								260,
								195,
								112,
								1102
							],
							"name": "FeeSplitter",
							"nameLocation": "421:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1120,
									"libraryName": {
										"id": 1117,
										"name": "SafeERC20",
										"nameLocations": [
											"481:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 750,
										"src": "481:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "475:27:8",
									"typeName": {
										"id": 1119,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1118,
											"name": "IERC20",
											"nameLocations": [
												"495:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 338,
											"src": "495:6:8"
										},
										"referencedDeclaration": 338,
										"src": "495:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$338",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "510:75:8",
										"text": " @custom:section                           ** ERRORS **"
									},
									"errorSelector": "842090f1",
									"id": 1123,
									"name": "CantSetAddressZero",
									"nameLocation": "597:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:8"
									},
									"src": "591:27:8"
								},
								{
									"errorSelector": "c8302616",
									"id": 1125,
									"name": "ZeroProfitDivider",
									"nameLocation": "630:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"src": "624:26:8"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "658:79:8",
										"text": " @custom:section                           ** IMMUTABLES **"
									},
									"id": 1129,
									"mutability": "immutable",
									"name": "_PTOKEN",
									"nameLocation": "768:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "743:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$338",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1128,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1127,
											"name": "IERC20",
											"nameLocations": [
												"743:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 338,
											"src": "743:6:8"
										},
										"referencedDeclaration": 338,
										"src": "743:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$338",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "784:86:8",
										"text": " @custom:section                           ** PRIVATE VARIABLES **"
									},
									"id": 1132,
									"mutability": "mutable",
									"name": "BRIBES",
									"nameLocation": "892:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "876:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1131,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "876:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1134,
									"mutability": "mutable",
									"name": "PANTHEON",
									"nameLocation": "921:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "905:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1133,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "905:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1136,
									"mutability": "mutable",
									"name": "EQUALDAO",
									"nameLocation": "952:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "936:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "936:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1138,
									"mutability": "mutable",
									"name": "ProfitDivider",
									"nameLocation": "985:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "969:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "969:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "1007:85:8",
										"text": " @custom:section                           ** PUBLIC VARIABLES **"
									},
									"functionSelector": "979e9056",
									"id": 1141,
									"mutability": "mutable",
									"name": "totalBribes",
									"nameLocation": "1113:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1359,
									"src": "1098:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1098:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "1133:75:8",
										"text": " @custom:section                           ** EVENTS **"
									},
									"eventSelector": "50efd2f2f250964da5961d710f9e330ea396faec8ef1e3dad48ff354a629d382",
									"id": 1150,
									"name": "FeeSent",
									"nameLocation": "1220:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1254:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1238:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "AmountSentToPantheonAndEqualDao",
												"nameLocation": "1285:31:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1269:47:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "AmountSentToBribing",
												"nameLocation": "1343:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1327:35:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:142:8"
									},
									"src": "1214:156:8"
								},
								{
									"anonymous": false,
									"eventSelector": "3d5a337607048974766ec58e2109261b4871329988d9615e7051bae635c38a60",
									"id": 1154,
									"name": "ProfitDividerUpdated",
									"nameLocation": "1382:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "ProfitDivider",
												"nameLocation": "1419:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "1403:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:8"
									},
									"src": "1376:58:8"
								},
								{
									"anonymous": false,
									"eventSelector": "0cd19529020fd81d84beeae5290e80cef2820b494e9aedf821b3c45b8110d7df",
									"id": 1158,
									"name": "PantheonAddressUpdated",
									"nameLocation": "1446:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"indexed": true,
												"mutability": "mutable",
												"name": "PantheonAddress",
												"nameLocation": "1485:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1469:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:33:8"
									},
									"src": "1440:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "203661c8635f7afb5f15d76e6b159110290d075ad62b4ee9ff9a7ab94187d4bd",
									"id": 1162,
									"name": "EqualDaoAddressUpdated",
									"nameLocation": "1514:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "EqualDaoAddress",
												"nameLocation": "1553:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1537:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:33:8"
									},
									"src": "1508:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "170b0500ccf8a13146ecd9838c59849129b54beda77dadbe500b8817cdc8d368",
									"id": 1166,
									"name": "BribingAddressUpdated",
									"nameLocation": "1582:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "BribingAddress",
												"nameLocation": "1620:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "1604:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:32:8"
									},
									"src": "1576:60:8"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "1761:44:8",
										"statements": [
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "_PTOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1772:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$338",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1174,
																"name": "_pToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "1789:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1173,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1782:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$338_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1782:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$338",
															"typeString": "contract IERC20"
														}
													},
													"src": "1772:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$338",
														"typeString": "contract IERC20"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "1772:25:8"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "1646:80:8",
										"text": " @custom:section                           ** CONSTRUCTOR **"
									},
									"id": 1179,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "_pToken",
												"nameLocation": "1752:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1744:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:17:8"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:0:8"
									},
									"scope": 1359,
									"src": "1732:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "2095:447:8",
										"statements": [
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "profit",
														"nameLocation": "2114:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "2106:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2106:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1191,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2150:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_FeeSplitter_$1359",
																						"typeString": "contract FeeSplitter"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_FeeSplitter_$1359",
																						"typeString": "contract FeeSplitter"
																					}
																				],
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2142:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1189,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2142:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2142:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1187,
																			"name": "_PTOKEN",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "2124:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$338",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2132:9:8",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 295,
																		"src": "2124:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2124:32:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2159:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2124:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2123:41:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1197,
														"name": "ProfitDivider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2167:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2123:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2106:74:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "_PTOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "2216:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1204,
															"name": "EQUALDAO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "2225:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1205,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2235:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2244:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2235:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1200,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "2193:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$750_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2203:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "2193:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2193:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "2193:53:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "_PTOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "2280:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1214,
															"name": "PANTHEON",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "2289:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "profit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "2299:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "32",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2308:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2299:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1210,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "2257:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$750_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2267:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "2257:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "2257:53:8"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "2331:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "2323:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2323:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1229,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1226,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2369:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeSplitter_$1359",
																		"typeString": "contract FeeSplitter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeSplitter_$1359",
																		"typeString": "contract FeeSplitter"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2361:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1224,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2361:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2361:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1222,
															"name": "_PTOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "2343:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2351:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "2343:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2343:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2323:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1233,
															"name": "_PTOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "2411:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1234,
															"name": "BRIBES",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "2420:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "2428:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$338",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1230,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "2388:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$750_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2398:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "2388:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$338_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "2388:50:8"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "totalBribes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "2449:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1239,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "2464:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2449:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "2449:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1243,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2499:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2505:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2499:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1245,
															"name": "profit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1246,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "2524:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "FeeSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2491:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2491:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "EmitStatement",
												"src": "2486:48:8"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "1908:141:8",
										"text": " @notice this function splits the revenue generated by pTOKEN.sol into the Bribing Wallet and the Pantheon & =DAO wallets"
									},
									"functionSelector": "f6151089",
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1182,
												"name": "onlyOwner",
												"nameLocations": [
													"2085:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2085:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2085:9:8"
										}
									],
									"name": "splitFees",
									"nameLocation": "2064:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:8"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:0:8"
									},
									"scope": 1359,
									"src": "2055:487:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "2778:142:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1258,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2792:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2802:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2792:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "2789:42:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1261,
															"name": "ZeroProfitDivider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "2812:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2812:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1263,
													"nodeType": "RevertStatement",
													"src": "2805:26:8"
												}
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "ProfitDivider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2844:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1266,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2860:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2844:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "2844:22:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1270,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "2905:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1269,
														"name": "ProfitDividerUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "2884:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2884:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "EmitStatement",
												"src": "2879:33:8"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "2550:161:8",
										"text": " @notice this function lets the owner set the ProfitDivider variable that is used to calculate the amount sent to the Pantheon & =DAO wallets"
									},
									"functionSelector": "e7fcd45d",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1255,
												"name": "onlyOwner",
												"nameLocations": [
													"2768:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2768:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2768:9:8"
										}
									],
									"name": "setProfitDivider",
									"nameLocation": "2726:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2751:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2743:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:16:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2778:0:8"
									},
									"scope": 1359,
									"src": "2717:203:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "3077:154:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "3091:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3111:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3103:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1283,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3103:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3103:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3091:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"nodeType": "IfStatement",
												"src": "3088:56:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1288,
															"name": "CantSetAddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3124:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3124:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1290,
													"nodeType": "RevertStatement",
													"src": "3117:27:8"
												}
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "BRIBES",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "3155:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"id": 1293,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "3165:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1294,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3164:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3155:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "3155:19:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1298,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "3214:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1297,
														"name": "BribingAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "3192:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3192:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "EmitStatement",
												"src": "3187:36:8"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "2928:80:8",
										"text": " @notice this function lets the owner set the Bribing Wallet"
									},
									"functionSelector": "9752b3b2",
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1279,
												"name": "onlyOwner",
												"nameLocations": [
													"3067:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3067:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3067:9:8"
										}
									],
									"name": "setBribingWallet",
									"nameLocation": "3023:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3048:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "3040:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3039:18:8"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3077:0:8"
									},
									"scope": 1359,
									"src": "3014:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "3390:157:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1310,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "3404:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3424:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3416:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1311,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3416:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3416:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3404:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "3401:56:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1316,
															"name": "CantSetAddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3437:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3437:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1318,
													"nodeType": "RevertStatement",
													"src": "3430:27:8"
												}
											},
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1320,
														"name": "PANTHEON",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "3468:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"id": 1321,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "3480:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1322,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3479:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3468:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "3468:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1326,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "3530:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1325,
														"name": "PantheonAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "3507:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3507:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "EmitStatement",
												"src": "3502:37:8"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "3239:81:8",
										"text": " @notice this function lets the owner set the Pantheon Wallet"
									},
									"functionSelector": "1f068108",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyOwner",
												"nameLocations": [
													"3380:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3380:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:9:8"
										}
									],
									"name": "setPantheonWallet",
									"nameLocation": "3335:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3361:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3353:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:18:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:8"
									},
									"scope": 1359,
									"src": "3326:221:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "3702:157:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1338,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "3716:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3736:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3728:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1339,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3728:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3728:12:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3716:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"nodeType": "IfStatement",
												"src": "3713:56:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1344,
															"name": "CantSetAddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "3749:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3749:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1346,
													"nodeType": "RevertStatement",
													"src": "3742:27:8"
												}
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1348,
														"name": "EQUALDAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "3780:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"id": 1349,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "3792:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1350,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3791:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3780:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "3780:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1354,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "3842:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1353,
														"name": "EqualDaoAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "3819:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3819:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "EmitStatement",
												"src": "3814:37:8"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "3555:77:8",
										"text": " @notice this function lets the owner set the =DAO Wallet"
									},
									"functionSelector": "8f88f261",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1335,
												"name": "onlyOwner",
												"nameLocations": [
													"3692:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3692:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3692:9:8"
										}
									],
									"name": "setEqualDaoWallet",
									"nameLocation": "3647:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3673:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3665:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3665:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3664:18:8"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3702:0:8"
									},
									"scope": 1359,
									"src": "3638:221:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "412:3450:8",
							"usedErrors": [
								1123,
								1125
							]
						}
					],
					"src": "32:3830:8"
				},
				"id": 8
			}
		}
	}
}